[[{"l":"Setup Virtual Hosts","p":["Directory Structure","permissions","demoPages","createConfFiles","hostsFile"]}],[{"l":"Create New Virtual Host Conf Files","p":["Back to Index","Create .conf files in /etc/httpd/conf.d","Add the following in the conf file for both sub and main domain","I also setup the website Philip Made","And a demo site for graphQL with a graphQL Playground","Added Assets sub-domain for some assets and the theme","Added Vite VueJs and Quasar App","Restart httpd"]}],[{"l":"Create Demo Pages for the Virtual Hosts","p":["Create a file named as index.html inside the public_html."]}],[{"l":"Set Up Local Hosts File","p":["If your DNS is not point on the same server then you can simply check the functionality of the website by enter the IP and Domain in the /etc/hosts file.","Note - You have to enter these details in the host OS (Windows Hosts File)"]}],[{"l":"Grant Permissions","p":["All the files and directories are owned by the root user. If you want to allow the other user to access and modify the files in the Document Root then you can change the ownership with the chown command.","Now we have to change the permission to ensure that read permission allowed to the general web directory. So, that all the content inside the public_html can be served correctly."]}],[{"l":"Create the Directory Structure","p":["First, create the directory structure in which we hold the website data to the serve on the internet for the visitors.","The Default Document Root location is /var/www/. Apache always looks at /var/www/ to find the content of the site. If you want to change the default path of Document Root. Simply edit the main Apache configuration file /etc/httpd/conf/httpd.conf.","To change the Document root edit the configuration file and the change the path of Document Root and the Directory of the Document Root.","Create the Directories using the mkdir command with -p extension that allow us to create a folder with a nested folder inside it.","In these directories we will create the public_html that hold our actual website files. It's not compulsory that you have to put the files public_html folder.","If you want to host multiple website then you have to create multiple directories for each of the Domain."]}],[{"l":"Extensions"},{"l":"PHP-mbstring Website"},{"i":"how-to-install-php-mbstring-on-rhel-8--centos-8","l":"How to Install PHP-mbstring on RHEL 8 / CentOS 8","p":["PHP-mbstring is used by a ton of popular applications, including WordPress. Installing it on RHEL 8 / CentOS 8 isn’t as straightforward is it probably should be, but it’s definitely not difficult.","The easiest and recommended way to install PHP-mbstring on RHEL 8 / CentoOS 8 is to dnf command and perform the php-mbstring package installation from a standard RHEL 8 / CentoOS repository. You can also install it directly from the Remi repository, which provides tons of other great PHP packages.","How to Install PHP-mbstring from the RHEL 8 / CentOS 8 Repository","How to Install PHP-mbstring from the Remi Repository","Install PHP mbstring on RHEL 8 / CentOS 8"]},{"l":"How to Install PHP-mbstring from the RHEL 8 Repository","p":["The simplest and perhaps the recommended way to install PHP-mbstring on RHEL 8 is to install it from a standard RHEL repository:"]},{"l":"How to Install PHP-mbstring from the Remi Repository"},{"l":"Install the Remi Repository","p":["While mbstring is available in the main RHEL repositories as php-mbstring the most flexible way to get mbstring on RHEL 8 that affords you the most choice, is to use the Remi repo. If you aren’t already familiar, Remi has been around for a long time, providing up-to-date PHP packages for RHEL and CentOS. As such, it’s earned a solid reputation and the trust of the community.","iMAGE The repository is provided in the form of a convenient RPM. You can install it directly from the Remi website with DNF. Go ahead and install it.","Confirm the install when you’re asked."]},{"l":"Install PHP-mbstring","p":["Image","Now that you have the Remi repository, you can go ahead and install PHP-mbstring. You do have one choice to make; which version of PHP do you want? Remi has all current versions of PHP. You can pick any one of them. This guide is going to use PHP 7.2, but substitute whichever number you’d prefer."]},{"l":"PHP DOM Extension Website","p":["Here we cover the fastest, most effective way to get the PHP DOM extension installed on CentOS. If you’ve just found out you need to install this extension, but don’t really know what it is, we’ve included some background first.","What is DOM?“The Document Object Model (DOM) is a cross-platform and language-independent convention for representing and interacting with objects in HTML, XHTML and XML documents.” (Source: DOM in Wikipedia.)","What is PHP DOM extension?“The DOM extension allows you to operate on XML documents through the DOM API with PHP 5.” (Source: Introduction to the PHP DOM Extension on php.net.)","How to install the PHP DOM Extension on CentOS You will need superuser privileges. Run the following command:","Don’t forget to restart Apache so PHP picks up the new extension:","How to Check PHP DOM is Installed","You can see PHP DOM is installed by creating a simple web page that calls the phpinfo() function:","When you go to this webpage in a browser, you should see this output for the dom extension if it’s installed:"]}],[{"l":"X-Debug Install","p":["https://linuxconfig.org/how-to-install-xdebug-on-redhat-8","pecl install xdebug"]}],[{"i":"how-to-install-php-7x-on-centos-8","l":"How to Install PHP 7.x on CentOS 8","p":["Open the terminal app and log in to the remote CentOS 8 server","Update CentOS 8 box, run sudo yum update","Search for PHP version, run sudo yum search php","Install and enable Remi’s repo for PHP 7.4, run sudo yum install yum-utils http://rpms.remirepo.net/enterprise/remi-release-8.rpm","Install PHP 7.2.11 or 7.4 and FastCGI module for Nginx on CentOS 8, execute: sudo yum install php php-fpm","Search and install additional PHP modules for graphics and database support using sudo yum search php-","Enable and restart both PHP and Nginx server","Test and verify both PHP installation","Let us see all commands in details."]},{"i":"step-1--updating-the-centos-8-box","l":"Step 1 – Updating the CentOS 8 box."},{"i":"step-2--searching-for-php-version-on-centos-8","l":"Step 2 – Searching for PHP version on CentOS 8","p":["Let us find out PHP version on CentOS Enterprise Linux 8 server, execute:","You may have multiple versions of PHP installed on your systems. One can verify it by merely running the following command:","The following example, indicates that PHP version 7.2, 7.3 and 7.4 available for installation:","By default, PHP version 7.2 would install as indicated by the [d] flag."]},{"i":"a-note-about-enabling-different-versions-of-php-such-as-73-and-74-on-centos-8","l":"A note about enabling different versions of PHP such as 7.3 and 7.4 on CentOS 8","p":["I strongly suggest using default PHP version 7.2 for production web apps. However, if you need PHP version 7.3 or 7.4, type the following commands to enable Remi’s repo:","Enable default version","he default PHP version locked to PHP 7.2. It would be best if you ran enable command to set the desired PHP version. In other words, to enable PHP version 7.4, run:","For PHP version 7.3, execute:"]},{"i":"step-3--installing-php-on-centos-8","l":"Step 3 – Installing PHP on CentOS 8","p":["Now that PHP version set, it is time to install PHP 7.x on your CentOS 8 cloud server by typing the following command:","It is time to verify and check PHP version, type:"]},{"l":"Enable php-fpm service","p":["Start the php-fpm service, run:","See how to reload/start/restart PHP-fpm service for more info:"]}],[{"l":"Docker","p":["Install Docker","Docker Networks","Install Portainer for Containers","Docker Compose via Portainer","Install LazyDocker via GO"]}],[{"l":"Install Docker Engine on CentOS","p":["Update 2022-01-22 Your might find that you need have container communicate with each other, have a look at: Docker Networks"]},{"l":"Prerequisites"},{"l":"OS requirements","p":["To install Docker Engine, you need a maintained version of CentOS 7 or 8. Archived versions aren’t supported or tested.","The centos-extras repository must be enabled. This repository is enabled by default, but if you have disabled it, you need to re-enable it.","The overlay2 storage driver is recommended."]},{"l":"Uninstall old versions","p":["It’s OK if yum reports that none of these packages are installed.","The contents of /var/lib/docker/, including images, containers, volumes, and networks, are preserved. The Docker Engine package is now called docker-ce."]},{"l":"Installation methods","p":["You can install Docker Engine in different ways, depending on your needs:","Most users set up Docker’s repositories and install from them, for ease of installation and upgrade tasks. This is the recommended approach.","Some users download the RPM package and install it manually and manage upgrades completely manually. This is useful in situations such as installing Docker on air-gapped systems with no access to the internet.","In testing and development environments, some users choose to use automated convenience scripts to install Docker."]},{"l":"Install using the repository","p":["Before you install Docker Engine for the first time on a new host machine, you need to set up the Docker repository. Afterward, you can install and update Docker from the repository."]},{"l":"Set up the repository","p":["Install the yum-utils package (which provides the yum-config-manager utility) and set up the stable repository."]},{"l":"Install Docker Engine","p":["Install the latest version of Docker Engine and containerd, or go to the next step to install a specific version:","sudo yum install docker-ce docker-ce-cli containerd.io If prompted to accept the GPG key, verify that the fingerprint matches 060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35, and if so, accept it.","Got multiple Docker repositories?","If you have multiple Docker repositories enabled, installing or updating without specifying a version in the yum install or yum update command always installs the highest possible version, which may not be appropriate for your stability needs.","The list returned depends on which repositories are enabled, and is specific to your version of CentOS (indicated by the .el7 suffix in this example).","Install a specific version by its fully qualified package name, which is the package name (docker-ce) plus the version string (2nd column) starting at the first colon (:), up to the first hyphen, separated by a hyphen (-). For example, docker-ce-18.09.1.","This command installs Docker, but it doesn’t start Docker. It also creates a docker group, however, it doesn’t add any users to the group by default."]},{"l":"Start Docker","p":["Verify that Docker Engine is installed correctly by running the hello-world image.","This command downloads a test image and runs it in a container. When the container runs, it prints a message and exits.","This installs and runs Docker Engine. Use sudo to run Docker commands. Continue to Linux postinstall to allow non-privileged users to run Docker commands and for other optional configuration steps."]},{"l":"Upgrade Docker Engine","p":["To upgrade Docker Engine, follow the installation instructions, choosing the new version you want to install."]},{"l":"Install from a package","p":["If you cannot use Docker’s repository to install Docker, you can download the .rpm file for your release and install it manually. You need to download a new file each time you want to upgrade Docker Engine.","Go to https://download.docker.com/linux/centos/ and choose your version of CentOS. Then browse to x86_64/stable/Packages/ and download the .rpm file for the Docker version you want to install."]},{"l":"Note","p":["To install a nightly or test (pre-release) package, change the word stable in the above URL to nightly or test. Learn about nightly and test channels.","Install Docker Engine, changing the path below to the path where you downloaded the Docker package.","Docker is installed but not started. The docker group is created, but no users are added to the group."]},{"l":"Start Docker After Install","p":["Verify that Docker Engine is installed correctly by running the hello-world image.","This command downloads a test image and runs it in a container. When the container runs, it prints a message and exits.","This installs and runs Docker Engine. Use sudo to run Docker commands. Continue to Post-installation steps for Linux to allow non-privileged users to run Docker commands and for other optional configuration steps."]},{"l":"Upgrade the Docker Engine","p":["To upgrade Docker Engine, download the newer package file and repeat the installation procedure, using yum -y upgrade instead of yum -y install, and point to the new file."]},{"l":"Install using the convenience script","p":["Docker provides a convenience script at get.docker.com to install Docker into development environments quickly and non-interactively. The convenience script is not recommended for production environments, but can be used as an example to create a provisioning script that is tailored to your needs. Also refer to the install using the repository steps to learn about installation steps to install using the package repository. The source code for the script is open source, and can be found in the docker-install repository on GitHub.","Always examine scripts downloaded from the internet before running them locally. Before installing, make yourself familiar with potential risks and limitations of the convenience script:","The script requires root or sudo privileges to run.","The script attempts to detect your Linux distribution and version and configure your package management system for you, and does not allow you to customize most installation parameters.","The script installs dependencies and recommendations without asking for confirmation. This may install a large number of packages, depending on the current configuration of your host machine. By default, the script installs the latest stable release of Docker, containerd, and runc. When using this script to provision a machine, this may result in unexpected major version upgrades of Docker. Always test (major) upgrades in a test environment before deploying to your production systems.","The script is not designed to upgrade an existing Docker installation. When using the script to update an existing installation, dependencies may not be updated to the expected version, causing outdated versions to be used."]},{"i":"tip-preview-script-steps-before-running","l":"Tip: preview script steps before running","p":["You can run the script with the DRY_RUN=1 option to learn what steps the script will execute during installation:","This example downloads the script from get.docker.com and runs it to install the latest stable release of Docker on Linux:","Docker is installed. The docker service starts automatically on Debian based distributions. On RPM based distributions, such as CentOS, Fedora, RHEL or SLES, you need to start it manually using the appropriate systemctl or service command. As the message indicates, non-root users cannot run Docker commands by default.","Use Docker as a non-privileged user, or install in rootless mode?","The installation script requires root or sudo privileges to install and use Docker. If you want to grant non-root users access to Docker, refer to the post-installation steps for Linux. Docker can also be installed without root privileges, or configured to run in rootless mode. For instructions on running Docker in rootless mode, refer to run the Docker daemon as a non-root user (rootless mode)."]},{"l":"Install pre-releases","p":["Docker also provides a convenience script at test.docker.com to install pre-releases of Docker on Linux. This script is equivalent to the script at get.docker.com, but configures your package manager to enable the “test” channel from our package repository, which includes both stable and pre-releases (beta versions, release-candidates) of Docker. Use this script to get early access to new releases, and to evaluate them in a testing environment before they are released as stable.","To install the latest version of Docker on Linux from the “test” channel, run:","Upgrade Docker after using the convenience script","If you installed Docker using the convenience script, you should upgrade Docker using your package manager directly. There is no advantage to re-running the convenience script, and it can cause issues if it attempts to re-add repositories which have already been added to the host machine."]},{"l":"Uninstall Docker Engine","p":["Uninstall the Docker Engine, CLI, and Containerd packages:","Images, containers, volumes, or customized configuration files on your host are not automatically removed. To delete all images, containers, and volumes:","You must delete any edited configuration files manually"]}],[{"l":"SERVER SETUP","p":["Nice SSH client:\"","MonaXterm"]},{"l":"Lamp Stack"},{"l":"1. Update System Software Packages","p":["Open a terminal window and update the package repository before installing new software:"]},{"l":"2. Install Apache","p":["2.1. Install Apache Web Services with the command:","Apache successfully installed on CentOS 8 server"]},{"i":"3-then-start-the-apache-service-by-running","l":"3. Then, start the Apache service by running:","p":["To verify Apache is running, open a web browser and navigate to the server’s public IP address. It should display the Apache Test Page, as in the image below.","apache is running on centos 8","Note: For additional details, refer to our article on how to install Apache on CentOS 8."]},{"l":"4. Install MySQL","p":["The third layer of the LAMP stack is MySQL or MariaDB. Both are open-source database management systems used for storing and managing data on your website.","In this example, the tutorial includes a MySQL installation. Alternatively, you can install MariaDB."]},{"i":"41-start-by-adding-the-mysql-repository","l":"4.1 Start by adding the MySQL repository:"},{"i":"42-check-the-repository-by-typing","l":"4.2 Check the repository by typing:","p":["The output should display a list of the different MySQL options available. output of a list of MySQL repositories"]},{"i":"5-now-install-mysql","l":"5. Now, install MySQL"},{"i":"51-then-enable-the-mysql-service-and-set-it-to-start-on-boot","l":"5.1 Then, enable the MySQL service and set it to start on boot:","p":["Check whether the service is running properly with the command:","The output should display the service is active (running).","Checking the MySQL status Note: To easily manage MySQL databases, admins often opt to install PHPMyAdmin."]},{"l":"6. Configure MySQL Security","p":["The next step is to configure the basic MySQL security settings.","6.1 Start by displaying the temporary MySQL root password:","The system displays the temporary MySQL password. Prompt MySQL for temporary password to configure security.","6.2 Next, run the command:","Provide the MySQL root password received in the previous step.","6.3 Then, enter and re-enter a new password, making sure it meets the standards for password strength.","After updating the password, you are prompted again to change the root password. To do so, type y and hit Enter.","The output displays the estimated strength of the password. Press y to continue with the password provided.","Answer the rest of the questions with y and Enter:","Remove anonymous users? (y) Disallow root login remotely? (y) Remove test database and access to it? (y) Reload privilege tables now? (y) With this, MySQL is secured.","Output displaying you have successfully secured the MySQL database. Note: For an in-depth guide and additional instructions, please refer to How to Install MySQL on CentOS 8.","Step 5: Install PHP and Supporting Modules Set up the final layer by installing the PHP programming language and the supporting modules for phpMyAdmin:","PHP installed on CentOS 8 as part of the lamp stack Then, enable the PHP module to work with Apache by restarting the webserver:"]},{"i":"6-adjust-the-firewall","l":"6: Adjust the Firewall","p":["If you have firewalld set up on CentOS, you need to adjust the configuration to allow Apache connections.","6.1 Open the firewall for HTTP traffic with the command:","6.2. Next, adjust it to allow HTTPS traffic as well:","6.3. Restart the firewall for the changes to take place:","6.4 Check to verify HTTP and HTTPS routes are now permanently open by running:","The output should display http and https in the list of services. List open firewall routes"]},{"l":"7. Test PHP with Apache","p":["Apache creates a web root file in the default website directory /var/www/html/. To check whether PHP is set up properly by running a test from this directory.","7.1. Create a info.php file inside the directory:","7.2 Then, add the following content:","7.3 Save and exit the file.","7.4 Now, verify if PHP is working correctly. Open a web browser and navigate to the URL (replacing ip_address with the public IP of the server):","The browser should display the content, as in the image below.","Verification of PHP installation on centos 8","Note: Want more details about this open-source software bundle? Refer to What is a LAMP stack?","Conclusion You should now have a working installation of LAMP Stack on your CentOS 8 system.","Next, explore other stack alternatives such as the XAMPP stack or the MEAN stack."]}],[{"i":"how-to-show-the-queries-log-in-mysql","l":"How to show the queries log in MySQL?"},{"i":"first-check-if-you-already-have-the-two-tables-slow_log-and-general_log-existing-in-the-mysql-database","l":"First, check if you already have the two tables slow_log and general_log existing in the mysql database.","p":["If not, you have to create them, note that you have to create in the mysql database.","Create the general_log table:","The general query log is a general record of what mysqld is doing. The server writes information to this log when clients connect or disconnect, and it logs each SQL statement received from clients. The general query log can be very useful when you suspect an error in a client and want to know exactly what the client sent to mysql","Create slow_log table","The slow query log consists of SQL statements that take more than long_query_time seconds to execute and require at leastmin_examined_row_limit rows to be examined. The slow query log can be used to find queries that take a long time to execute and are therefore candidates for optimization.","The minimum and default values of long_query_time are 0 and 10, respectively. The value can be specified to a resolution of microseconds."]},{"l":"2. Enable Query logging on the database"},{"l":"3. Now you can view the log by running this query"},{"i":"4-if-you-want-to-disable-query-logging-on-the-database-run-this-query","l":"4. If you want to disable query logging on the database, run this query:"}],[{"l":"Remote Dictionary Server","p":["Redis, which stands for Remote Dictionary Server, is a fast, open source, in-memory, key-value data store. What is Redis and Why is it used by leading industries? By Jaidev Singh Bhui June 02, 2021 10 min read What is Redis and Why is it used by leading industries? In this age of modern technology, no one likes to wait for a long time for their search results or Twitter feeds to show up. Similarly, if you’re playing a game you would want to view the leaderboard updated in real-time. All these needs require a solution that is highly performant and rapid, which helps us in accessing data faster. Redis is a solution that makes all of this possible."]},{"i":"what-is-redis","l":"What is Redis?","p":["Redis actually stands for Remote Dictionary Server.","It is basically a data-structure store that stores the data in the primary memory of a computer system. It uses key-value pairs to store the data, which is just like a HashMap in Java, a dictionary in Python, or an object in JavaScript. This is also why it is sometimes referred to as a NoSQL database."]},{"i":"redis-is-an-open-source-project-with-a-flourishing-community","l":"Redis is an open-source project with a flourishing community.","p":["Features of Redis In-memory storage Well, conventionally all the databases store and access the data from hard disks and SSDs, which are secondary memory. As we all know, primary memory is faster than secondary memory, as it can be accessed directly by the processor.","Now, since Redis stores its data on the primary memory, reading and writing are made faster than databases that store data on disks."]},{"i":"memory--storage-hierarchy","l":"Memory & Storage Hierarchy","p":["This is also why Redis is used as a cache in many applications, to provide results rapidly. But we could store our data directly on the primary memory or in the system cache, we won’t require Redis then, right?","Redis is so much more than ‘just a cache’, as you will see."]},{"l":"Advanced Data Structures","p":["Redis stores its data in a key-value pair and has the ability to store the data using a variety of data structures like:","Strings","Lists","Sets","Sorted Sets","Hashes","Bit Arrays","HyperLogLogs","Streams"]},{"l":"Key-value store","p":["This is not possible if you would wish to store data directly in the memory, without using Redis. Even Memcached, which is another very popular in-memory key-value store used as a caching mechanism, only supports Strings but not such data structures which Redis provides.","As a developer, you must have used some of these data structures, which also makes Redis easier to use and implement.","There is no serialization required here since the data is stored directly in the form of the data structures you are coding in. Had this not been the case, you would have to convert or serialize the data into Strings before storing it into any other data store or database."]},{"l":"Persistence","p":["Another disadvantage of directly using primary memory or system cache is the data being volatile. All the data on primary memory gets washed off or cleaned as soon as there is no power source or when the system is shut down.","Redis offers two mechanisms to help prevent this - Snapshots and AOFs (Append Only Files), which are basically a backup of the Redis data-store on the secondary memory, so that if there is a system failure or if there is a power outage, it can recall the current state of the database, by loading data from these backups present on the disks."]},{"l":"Replication","p":["Redis uses master-slave (primary-replica) architecture, where data can be replicated to multiple replica servers. This boosts the read performance since requests can split among different servers. This also helps in faster recovery in case the master or primary server experiences an outage."]},{"l":"Huge Support","p":["Being an Open Source project with a diverse community, Redis has no technology constraint, as it is based on open standards, and supports open data formats. It also supports a rich set of clients, with support in more than 40 programming languages.","Since Redis stores everything in-memory, in the form of a wide variety of data structures, and also provides persistence and the ability of replicating servers, it stands out when comparing to other databases/caches which cannot serve the same purpose as Redis."]},{"i":"twitter---caching-with-low-latency","l":"Twitter - Caching with low latency","p":["Twitter is a social-networking site, which is much like any other social media application out there, with features like a user can create posts, like other user’s posts, comment on a post, or even follow other users. Posts in this context are tweets, but let’s keep it general.","Let’s say you’re building a social media application.","You would want to save user profiles in a cache, with information like number of posts, followers and following, so that a lot of overhead is reduced on the system, to fetch data from the database and recompute every time the user asks for it.","Similarly, when you would open the application signed in as a user, the first screen you would see is your feed or timeline, which would have posts from all the users you follow.","Now, of course, if you follow only 2-3 users, getting their posts in reverse order and then merging them is not that heavy of a computation. But if it’s a pretty big application, with millions of users, where they are following hundreds of thousands of users, this performs very poorly, as this needs to be computed for every user, every time they open the app.","This is where Redis comes into the picture and solves the problem by computing and storing all of these timelines in a cache, and serving it to the clients from there.","It’s faster, provides lower latency, and performs way better.","As you can see, Redis is basically a swiss army knife and has multiple use cases in the real world. I hope that now you have a better knowledge of how these real-world applications use Redis, and what causes your feeds and gaming leaderboards to update in real-time."]}],[{"l":"DB Connectors","p":["Here is a list of connectors for Maria DB on most platforms and use cases. The ODBC Connection is the fastest and easiest to install for Windows.","You can check which ODBC connections:","Has already been setup in Windows by shortcut [Start Button]","Type ODBC Data Sources"]},{"l":"Download Links","p":["C Connector","CPP Connector","Java Connector","NodeJS","ODBC Connector","PowerBI Connector","Python Connector","r2dbc Connector"]},{"l":"Adding ODBC Connection Windows","p":["To open the ODBC Data Source Administrator in Windows 10 On the Start page, type ODBC Data Sources. The ODBC Data Sources Desktop App should appear as a choice.","To open the ODBC Data Source Administrator in Windows 7","On the Start menu, click Control Panel.","In Control Panel, click Administrative Tools.","In Administrative Tools, click Data Sources (ODBC).","To open the ODBC Data Source Administrator in Windows Server 2008 On the Start menu, point to Administrative Tools, and then click Data Sources (ODBC). Note","For connections to Azure Active Directory Authentication for SQL Database install the latest driver, such as ODBC Driver 17 for SQL Server"]},{"l":"See Also","p":["Check the ODBC SQL Server Driver Version Windows"]}],[{"l":"Introduction","p":["Composer is a tool for dependency management in PHP. It allows you to declare the libraries your project depends on and it will manage ( install/update) them for you."]},{"l":"Dependency management","p":["Composer is not a package manager in the same sense as Yum or Apt are. Yes, it deals with \"packages\" or libraries, but it manages them on a per-project basis, installing them in a directory (e.g. vendor) inside your project. By default, it does not install anything globally. Thus, it is a dependency manager. It does however support a \"global\" project for convenience via the global command.","This idea is not new and Composer is strongly inspired by node's npm and ruby's bundler.","Suppose:","You have a project that depends on a number of libraries. Some of those libraries depend on other libraries. Composer:","Enables you to declare the libraries you depend on. Finds out which versions of which packages can and need to be installed, and installs them (meaning it downloads them into your project).","You can update all your dependencies in one command. See the Basic usage chapter for more details on declaring dependencies."]},{"l":"System Requirements","p":["Composer requires PHP 5.3.2+ to run. A few sensitive php settings and compile flags are also required, but when using the installer you will be warned about any incompatibilities.","To install packages from sources instead of plain zip archives, you will need git, svn, fossil or hg depending on how the package is version-controlled.","Composer is multi-platform and we strive to make it run equally well on Windows, Linux and macOS."]},{"i":"installation---linux--unix--macos","l":"Installation - Linux / Unix / macOS","p":["Downloading the Composer Executable# Composer offers a convenient installer that you can execute directly from the command line. Feel free to download this file or review it on GitHub if you wish to know more about the inner workings of the installer. The source is plain PHP.","There are in short, two ways to install Composer. Locally as part of your project, or globally as a system wide executable."]},{"l":"Locally","p":["To install Composer locally, run the installer in your project directory. See the Download page for instructions.","The installer will check a few PHP settings and then download composer.phar to your working directory. This file is the Composer binary. It is a PHAR( PHP archive), which is an archive format for PHP which can be run on the command line, amongst other things.","Now run php composer.phar in order to run Composer.","You can install Composer to a specific directory by using the --install-dir option and additionally (re)name it as well using the --filename option. When running the installer when following the Download page instructions add the following parameters:","Now run php bin/composer in order to run Composer."]},{"l":"Globally","p":["You can place the Composer PHAR anywhere you wish. If you put it in a directory that is part of your PATH, you can access it globally. On Unix systems you can even make it executable and invoke it without directly using the php interpreter.","After running the installer following the Download page instructions you can run this to move composer.phar to a directory that is in your path:","mv composer.phar /usr/local/bin/composer","If you like to install it only for your user and avoid requiring root permissions, you can use ~/.local/bin instead which is available by default on some Linux distributions.","Note: If the above fails due to permissions, you may need to run it again with sudo.","Note: On some versions of macOS the /usr directory does not exist by default. If you receive the error \"/usr/local/bin/composer: No such file or directory\" then you must create the directory manually before proceeding: mkdir -p /usr/local/bin.","Note: For information on changing your PATH, please read the Wikipedia article and/or use your search engine of choice.","Now run composer in order to run Composer instead of php composer.phar."]},{"i":"installation---windows","l":"Installation - Windows"},{"l":"Using the Installer","p":["This is the easiest way to get Composer set up on your machine.","Download and run Composer-Setup.exe. It will install the latest Composer version and set up your PATH so that you can call composer from any directory in your command line.","Note: Close your current terminal. Test usage with a new terminal: This is important since the PATH only gets loaded when the terminal starts."]},{"l":"Manual Installation","p":["Change to a directory on your PATH and run the installer following the Download page instructions to download composer.phar.","Create a new composer.bat file alongside composer.phar:","Using cmd.exe:"]},{"l":"Using PowerShell","p":["Add the directory to your PATH environment variable if it isn't already. For information on changing your PATH variable, please see this article and/or use your search engine of choice.","Close your current terminal. Test usage with a new terminal:"]},{"l":"Using Composer","p":["Now that you've installed Composer, you are ready to use it! Head on over to the next chapter for a short demonstration."]}],[{"l":"COMPOSER DEPENDENCIES"},{"i":"1-before-adding-any-requirements-into-you-composerjson","l":"1. Before adding any requirements into you composer.json","p":["This will already create a vendor folder an autoloader.php. This will be the only file you will ever include for any vendor dependencies ever. No matter what dependencies you install, you will always just keep on including that one autoloader.php"]},{"i":"2-add-dependency-to-composerjson","l":"2. Add dependency to composer.json"},{"l":"3. Let Composer update all the dependencies","p":["Now you dependencies you required will be installed and they will be autoloaded if you just include the /vendor/autoloader.php"]}],[{"l":"Disable Certificate Check"}],[{"l":"Install Samba on CentOS 7","p":["The first thing we have to do is to install samba on our machine. The package and the needed libraries are available in the official RHEL 7/ CentOS 7 repositories, therefore we can install them just by using yum or dnf. In this version of RHEL/CentOS, the first command it’s just a link to the second:","The samba-client package is not strictly needed, but the utilities provided by it can be useful. Once the packages are installed, we have to start and enable the smb and the nmb daemons at boot. The first is the daemon which takes care of performing the actual transfers and the sharing operations, while the second performs the NetBIOS name resolutions, allowing the resources to appear when browsing the network on Windows. We can now enable and start both systemd services with just one command:","Normally you would need to configure the firewall but we disabled it so :)"]},{"l":"Configuring a shared directory accessible by guests","p":["Let’s say we want to share a directory via samba, and we want to let free access to this directory to guest users, without them having to provide a password. To obtain the desired result, we must make some changes to the /etc/samba/smb.conf file, and add a “stanza” for our share. Open the file with your favorite editor, and in the [global]` section, add the highlighted text:"]},{"i":"configuring--samba","l":"Configuring Samba","p":["I want to share /var/www, normally you would do the following to create a share","But in this case I already have the folders I want to share and I need to keep the ownership to apache, so all I can do for now is","Now create a new samba configuration file"]},{"l":"Creating secure shares in Samba","p":["The file share we just created is accessible to everyone and any user can create and delete files. This poses a challenge if you want to share critical documents as they can be overwritten or deleted as well. For this reason, we need to create a secure file share to address this challenge.","First, we are going to create a new group for samba users as shown:","Then we shall add a new user to the newly created group","necessary permissions and file ownership as shown below .","This will prompt you to provide a SMP password and later confirm it.","Append the config below"]},{"l":"Start and enable Samba services","p":["Then confirm if smb service is running:","Similarly confirm if nmb service is running just like we did with smb service:","I then connected the share as a network drive, In windows right click This PC and click on Map network drive","path: \\\\[server ip]\\Share","Drive letter: S:"]},{"l":"Make apache group share"}],[{"l":"How to Install and Configure Samba on CentOS 8"},{"l":"1. Install samba and necessary packages","p":["Log into your server and run the command below to install Samba and its dependencies.","shell","We must also ensure that the Windows and Linux system are in the same workgroup. So, go to your Windows PC and launch command prompt. Type the command:","From the output, we can clearly see that the workstation domain points to ‘WORKGROUP’.This will also be configured later on the Linux machine."]},{"l":"2. Configuring Samba","p":["Having installed Samba, it’s time to make a few configurations. But before we do that, we need to back up the samba config file. So, run the command below:","Next, we are going to create a shared folder called shared and assign the necessary permissions and ownership as shown.","shell","Now create a new samba configuration file","Append the configuration below:","Save and close the configuration file. To verify that the configuration is sound, run testparm command"]},{"l":"3. Allow samba service on the firewall","p":["Next, allow Samba across the firewall so that outside users can access samba shares."]},{"l":"4. Start and enable Samba services","p":["Then confirm if smb service is running:","shell"]},{"l":"5. Accessing Samba share from windows machine","p":["From your Windows PC, press Windows Key + R to launch the Run dialog and type","\\\\hostname-of-samba server","OR","\\\\IP-address-of-samba-server","shell","This opens a window below with an ‘Anonymous’ folder.","You can create files either from Samba server or from the client and share it with other users"]},{"l":"Creating secure shares in Samba","p":["Then we shall add a new user to the newly created group","Next, we are going to create a new secure folder and later assign the necessary permissions and file ownership as shown below .","shell","Next, we will assign the samba user a password that will be used when accessing the secured file share. This will prompt you to provide a SMP password and later confirm it.","![shell](( https://www.linuxtechi.com/wp-content/uploads/2020/02/smbpasswd-user-centos8.png?ezimgfmt=ng:webp/ngcb22)","Now let’s head back to Samba’s configuration file","Append the config lines shown below:","Save & exit and then restart Samba service"]},{"l":"Accessing the Samba secure folder from a Windows System","p":["Again, to access Samba share from your windows system hit Windows Key + R to launch the Run dialogue. Type \\\\hostname or \\\\ samba-IP and hit ENTER.","shell","You’ll now notice that we have another folder called secured.","To access it, double click on it and a login pop-up will prompt you for your username and password credentials.","Once done, click on the OK button or simply hit ENTER to access the contents of the folder"]},{"l":"Accessing the Samba secure folder from a Linux machine","p":["To access the shared directories from a Linux system, simply run the command:","Provide the password when prompted and hit ENTER","shell","To access the secure share run","Feel free to create files and directories to share with other samba users."]}],[{"l":"Toubleshooting"}],[{"i":"install-nodejs-16-on-centos-8--centos-7","l":"Install Node.js 16 on CentOS 8 | CentOS 7","p":["Node.js packages are provided through the NodeSource Node.js Binary Distributions via .rpm. Add the repository to the system using the commands below:","Once the repository has been configured on your CentOS server you can proceed to install Node.js 16 on CentOS 8 | CentOS 7:","Confirm that you can start node shell:","Welcome to Node.js v16.4.1. Type \".help\" for more information.",".exit If you need development tools to build native addons:","To install the Yarn package manager run the following commands:","Testing Node.js 16 installation on CentOS 8 | CentOS 7","Once we have installed Node.js, let’s build our first web server. Create a file named app.js containing the following contents:","Then run your web server using the following command","This runs the service on port 3000","Visit http://localhost:3000 and you will see a message saying “Hello World“"]},{"i":"upgrade-nodejs","l":"Upgrade Node.js","p":["Complete!","Now let’s install the new version of Node.js:","Loaded plugins: fastestmirror, langpacks Loading mirror speeds from cached hostfile"]},{"l":"Available Packages","p":["nodejs.x86_64 2:12.14.1-1nodesource nodesource"]}],[{"l":"Setup NginX as Reverse Proxy"},{"l":"Why reverse proxy","p":["I realized that a lot of the web applications I installed and will be installing does not run on port 80 and are not hosted on Apache, So I need a way to control all of this traffic, I need way to use my SSL certificate on all the ports and I need a way to point my sub-domains to a specific port so that I don't have to use http://CRONje.ME:9000 for portainer but that I can use portainer.CRONje.ME."]},{"l":"Install NginX","p":["If you have not yet installed Nginx then run command","That should install Nginx, you can now check if the service is running. But if you have Apache running like I do on port 80 then Nginx server probably failed to start","You may get the following error: Unit nginx.service could not be found.","If so run this command:","If you still en error, then try stopping Apache server"]},{"l":"Set Apache to listen on port 8080"},{"l":"Update these lines","p":["So you comment out # Listen 80 and above that comment in and change the IP address to 127.0.0.1:8080 and the port number to 8080","Restart Apache"]},{"l":"Set Nginx to Run on Apache user"},{"l":"Update root web folder and server name"},{"i":"create-proxyconf","l":"Create proxy.conf","p":["Add the following to the file"]}],[{"l":"NginX Proxy Manager","p":["This will be an install with docker compose and I will will be using Portainer to install","Open Portainer and click on stacks","In the Docker Compose field, enter the following:","Now you can go to http://yourserver:81","Default Email: admin@example.com Default Password: changeme"]}],[{"l":"Setup NginX as Reverse Proxy"},{"l":"Why reverse proxy","p":["I realized that a lot of the web applications I installed and will be installing does not run on port 80 and are not hosted on Apache, So I need a way to control all of this traffic, I need way to use my SSL certificate on all the ports and I need a way to point my sub-domains to a specific port so that I don't have to use http://CRONje.ME:9000 for portainer but that I can use portainer.CRONje.ME."]},{"l":"Install NginX","p":["If you have not yet installed Nginx then run command","That should install Nginx, you can now check if the service is running. But if you have Apache running like I do on port 80 then Nginx server probably failed to start","You may get the following error: Unit nginx.service could not be found.","If so run this command:","If you still en error, then try stopping Apache server"]},{"l":"Set Apache to listen on port 8080"},{"l":"Update these lines","p":["So you comment out # Listen 80 and above that comment in and change the IP address to 127.0.0.1:8080 and the port number to 8080","Restart Apache"]},{"l":"Set Nginx to Run on Apache user"},{"l":"Update root web folder and server name"},{"i":"create-proxyconf","l":"Create proxy.conf","p":["Add the following to the file"]}],[{"i":"install-php-8-on-centosrhel-87","l":"Install PHP 8 on CentOS/RHEL 8/7"},{"i":"step-1-enable-epel-and-remi-repository-on-centosrhel","l":"Step 1: Enable EPEL and Remi Repository on CentOS/RHEL","p":["Right off the bat, you need to enable the EPEL repository on your system. EPEL, short for Extra Packages for Enterprise Linux, is an effort from the Fedora team that provides a set of additional packages that are not present by default on RHEL & CentOS.","Remi repository is a third-party repository that provides a wide range of PHP versions for RedHat Enterprise Linux. To install the Remi repository, run the command:"]},{"i":"step-2-install-php-8-on-centosrhel","l":"Step 2: Install PHP 8 on CentOS/RHEL","p":["Once the installation is complete, proceed and list the available php module streams as shown:"]}],[{"l":"Install Node Version Manager","p":["nvm allows you to quickly install and use different versions of node via the command line.","Example:"]},{"i":"install--update-script","l":"Install & Update Script","p":["To install or update nvm, you should run the [install script][2]. To do that, you may either download and run the script manually, or use the following cURL or Wget command:","Running either of the above commands downloads a script and runs it. The script clones the nvm repository to ~/.nvm, and attempts to add the source lines from the snippet below to the correct profile file (~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc)."]},{"l":"Additional Notes","p":["If the environment variable $XDG_CONFIG_HOME is present, it will place the nvm files there.","You can add --no-use to the end of the above script (... nvm.sh --no-use) to postpone using nvm until you manually use it.","You can customize the install source, directory, profile, and version using the NVM_SOURCE, NVM_DIR, PROFILE, and NODE_VERSION variables. Eg: curl ... | NVM_DIR=path/to/nvm. Ensure that the NVM_DIR does not contain a trailing slash.","The installer can use git, curl, or wget to download nvm, whichever is available."]},{"l":"Troubleshooting on Linux","p":["On Linux, after running the install script, if you get nvm: command not found or see no feedback from your terminal after you type command -v nvm, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:","These should pick up the nvm command."]},{"l":"Verify Installation","p":["To verify that nvm has been installed, do:","which should output nvm if the installation was successful. Please note that which nvm will not work, since nvm is a sourced shell function, not an executable binary.","Note: On Linux, after running the install script, if you get nvm: command not found or see no feedback from your terminal after you type command -v nvm, simply close your current terminal, open a new terminal, and try verifying again."]},{"l":"Important Notes","p":["If you're running a system without prepackaged binary available, which means you're going to install nodejs or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the build-essential and libssl-dev packages work.","Note: nvm also support Windows in some cases. It should work through WSL (Windows Subsystem for Linux) depending on the version of WSL. It should also work with GitBash(MSYS) or Cygwin. Otherwise, for Windows, a few alternatives exist, which are neither supported nor developed by us:","nvm-windows","nodist","nvs","Note: nvm does not support [Fish] either (see #303). Alternatives exist, which are neither supported nor developed by us:","bass allows you to use utilities written for Bash in fish shell","fast-nvm-fish only works with version numbers (not aliases) but doesn't significantly slow your shell startup","plugin-nvm plugin for Oh My Fish, which makes nvm and its completions available in fish shell","fnm- fisherman-based version manager for fish","fish-nvm- Wrapper around nvm for fish, delays sourcing nvm until it's actually used."]},{"l":"Git Install","p":["If you have git installed (requires git v1.7.10+):","clone this repo in the root of your user profile","cd ~/ from anywhere then git clone https://github.com/nvm-sh/nvm.git .nvm","cd ~/.nvm and check out the latest version with git checkout v0.39.1","activate nvm by sourcing it from your shell: . ./nvm.sh","Now add these lines to your ~/.bashrc, ~/.profile, or ~/.zshrc file to have it automatically sourced upon login:(you may have to add to more than one of the above files)"]},{"l":"Manual Install","p":["For a fully manual install, execute the following lines to first clone the nvm repository into $HOME/.nvm, and then load nvm:","Now add these lines to your ~/.bashrc, ~/.profile, or ~/.zshrc file to have it automatically sourced upon login:(you may have to add to more than one of the above files)"]},{"l":"Manual Upgrade","p":["For manual upgrade with git(requires git v1.7.10+):","change to the $NVM_DIR","pull down the latest changes","check out the latest version","activate the new version"]},{"l":"Usage","p":["To download, compile, and install the latest release of node, do this:","To install a specific version of node:","The first version installed becomes the default. New shells will start with the default version of node (e.g., nvm alias default).","You can list available versions using ls-remote:","And then in any new shell just use the installed version:","Or you can just run it:","Or, you can run any arbitrary command in a subshell with the desired version of node:","You can also get the path to the executable to where it was installed:","In place of a version pointer like \"14.7\" or \"16.3\" or \"12.22.1\", you can use the following special default aliases with nvm install, nvm use, nvm run, nvm exec, nvm which, etc:","node: this installs the latest version of node","iojs: this installs the latest version of io.js","stable: this alias is deprecated, and only truly applies to node v0.12 and earlier. Currently, this is an alias for node.","unstable: this alias points to node v0.11- the last \"unstable\" node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability)."]},{"l":"Long-term Support","p":["Node has a schedule for long-term support (LTS) You can reference LTS versions in aliases and .nvmrc files with the notation lts/* for the latest LTS, and lts/argon for LTS releases from the \"argon\" line, for example. In addition, the following commands support LTS arguments:","nvm install --lts/ nvm install --lts=argon/ nvm install 'lts/*'/ nvm install lts/argon","nvm uninstall --lts/ nvm uninstall --lts=argon/ nvm uninstall 'lts/*'/ nvm uninstall lts/argon","nvm use --lts/ nvm use --lts=argon/ nvm use 'lts/*'/ nvm use lts/argon","nvm exec --lts/ nvm exec --lts=argon/ nvm exec 'lts/*'/ nvm exec lts/argon","nvm run --lts/ nvm run --lts=argon/ nvm run 'lts/*'/ nvm run lts/argon","nvm ls-remote --lts/ nvm ls-remote --lts=argon nvm ls-remote 'lts/*'/ nvm ls-remote lts/argon","nvm version-remote --lts/ nvm version-remote --lts=argon/ nvm version-remote 'lts/*'/ nvm version-remote lts/argon","Any time your local copy of nvm connects to https://nodejs.org, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under $NVM_DIR/alias/lts), are managed by nvm, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.","To get the latest LTS version of node and migrate your existing installed packages, use"]},{"l":"Migrating Global Packages While Installing","p":["If you want to install a new version of Node.js and migrate npm packages from a previous version:","This will first use \"nvm version node\" to identify the current version you're migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs \"nvm reinstall-packages\" to reinstall the npm packages from your prior version of Node to the new one.","You can also install and migrate npm packages from specific versions of Node like this:","Note that reinstalling packages explicitly does not update the npm version— this is to ensure that npm isn't accidentally upgraded to a broken version for the new node version.","To update npm at the same time add the --latest-npm flag, like this:","or, you can at any time run the following command to get the latest supported npm version on the current node version:","If you've already gotten an error to the effect of \"npm does not support Node.js\", you'll need to (1) revert to a previous node version ( nvm ls& nvm use your latest _working_ version from the ls, (2) delete the newly created node version ( nvm uninstall your _broken_ version of node from the ls), then (3) rerun your nvm install with the --latest-npm flag."]},{"l":"Default Global Packages From File While Installing","p":["If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file $NVM_DIR/default-packages. You can add anything npm would accept as a package argument on the command line."]},{"i":"iojs","l":"io.js","p":["If you want to install io.js:","If you want to install a new version of io.js and migrate npm packages from a previous version:","The same guidelines mentioned for migrating npm packages in node are applicable to io.js."]},{"l":"System Version of Node","p":["If you want to use the system-installed version of node, you can use the special default alias \"system\":"]},{"l":"Listing Versions","p":["If you want to see what versions are installed:","If you want to see what versions are available to install:"]},{"l":"Setting Custom Colors","p":["You can set five colors that will be used to display version and alias information. These colors replace the default colors."]},{"l":"Persisting custom colors","p":["If you want the custom colors to persist after terminating the shell, export the NVM_COLORS variable in your shell profile. For example, if you want to use cyan, magenta, green, bold red and bold yellow, add the following line:"]},{"l":"Suppressing colorized output","p":["nvm help (or -h or --help), nvm ls, nvm ls-remote and nvm alias usually produce colorized output. You can disable colors with the --no-colors option (or by setting the environment variable TERM=dumb):"]},{"l":"Restoring PATH","p":["To restore your PATH, you can deactivate it:"]},{"l":"Set default node version","p":["To set a default Node version to be used in any new shell, use the alias 'default':"]},{"l":"Use a mirror of node binaries","p":["To use a mirror of the node binaries, set $NVM_NODEJS_ORG_MIRROR:","To use a mirror of the io.js binaries, set $NVM_IOJS_ORG_MIRROR:","nvm use will not, by default, create a \"current\" symlink. Set $NVM_SYMLINK_CURRENT to \"true\" to enable this behavior, which is sometimes useful for IDEs. Note that using nvm in multiple shell tabs with this environment variable enabled can cause race conditions."]},{"i":"nvmrc","l":".nvmrc","p":["You can create a .nvmrc file containing a node version number (or any other string that nvm understands; see nvm --help for details) in the project root directory (or any parent directory). Afterwards, nvm use, nvm install, nvm exec, nvm run, and nvm which will use the version specified in the .nvmrc file if no version is supplied on the command line.","For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:","[NB these examples assume a POSIX-compliant shell version of echo. If you use a Windows cmd development environment, eg the .nvmrc file is used to configure a remote Linux deployment, then keep in mind the s will be copied leading to an invalid file. Remove them.]","Then when you run nvm:","nvm use et. al. will traverse directory structure upwards from the current directory looking for the .nvmrc file. In other words, running nvm use et. al. in any subdirectory of a directory with an .nvmrc will result in that .nvmrc being utilized.","The contents of a .nvmrc file must be the version(as described by nvm --help) followed by a newline. No trailing spaces are allowed, and the trailing newline is required."]},{"l":"Deeper Shell Integration","p":["You can use avn to deeply integrate into your shell and automatically invoke nvm when changing directories. avn is not supported by the nvm maintainers. Please report issues to the avn team.","If you prefer a lighter-weight solution, the recipes below have been contributed by nvm users. They are not supported by the nvm maintainers. We are, however, accepting pull requests for more examples."]},{"l":"bash"},{"l":"Automatically call nvm use","p":["Put the following at the end of your $HOME/.bashrc:","This alias would search 'up' from your current directory in order to detect a .nvmrc file. If it finds it, it will switch to that version; if not, it will use the default version."]},{"l":"zsh"},{"l":"Calling nvm use automatically in a directory with a .nvmrc file","p":["Put this into your $HOME/.zshrc to call nvm use automatically whenever you enter a directory that contains an.nvmrc file with a string telling nvm which node to use:"]}],[{"l":"Neutralinojs","p":["Neutralinojs is a lightweight and portable desktop application development framework. It lets you develop lightweight cross-platform desktop applications using JavaScript, HTML and CSS. Apps built with Neutralinojs can run on Linux, macOS, Windows, Web, and Chrome. Also, you can extend Neutralinojs with any programming language (via extensions IPC) and use Neutralinojs as a part of any source file (via child processes IPC).","Neutralinojs vs Electron vs NW.JS vs Tauri vs NodeGui vs Flutter vs .Net MAUI Neutralinojs vs Electron vs NW.js (2018) Roadmap for 2022"]},{"l":"Get started with the neu CLI"},{"l":"Creating a new app"},{"i":"building-your-app-no-compilation---takes-less-than-a-second","l":"Building your app (No compilation - takes less than a second)","p":["Start building apps: neutralino.js.org/docs"]},{"i":"why-neutralinojs","l":"Why Neutralinojs?","p":["In Electron and NWjs, you have to install NodeJs and hundreds of dependency libraries. Embedded Chromium and Node make simple apps bloaty. Neutralinojs offers a lightweight and portable SDK which is an alternative for Electron and NW.js. Neutralinojs doesn't bundle Chromium and uses the existing web browser library in the operating system (Eg: gtk-webkit2 on Linux). Neutralinojs implements a WebSocket connection for native operations and embeds a static web server to serve the web content. Also, it offers a built-in JavaScript client library for developers.","Ask questions on StackOverflow using tag neutralinojs"]}],[{"l":"Network Config","p":["The easiest way is to use the GUI Aki7lol","For communication between VirtualBox and Windows, set the network device to bridged mode in VirtualBox Settings. This will cause the virtual machine to be seen as just another device on the network and the DHCP will assign it an IP Address","If you are working with a cloned device you will need to set the Device Mac address to the address of the device as it is specified in VirtualBox"]}],[{"l":"Monitor Dashboard","p":["I'm running this dashboard in a container","Open Portainer","Add Container","Name: monitorr/monitorr","Click on Publish a new network port","Host Port: 4445","Container Port: 80","Add the env variables","PUID: 1000","PGID: 1000","TZ: Africa/Johannesburg","Click on Deploy container","Go to http://yourserver:4445"]}],[{"l":"Install MongoDB Community Edition on Centos 7"},{"l":"MongoDB Version","p":["This tutorial installs MongoDB 5.0 Community Edition. To install a different version of MongoDB Community, use the version drop-down menu in the upper-left corner of this page to select the documentation for that version.","Follow these steps to install MongoDB Community Edition using the yum package manager."]},{"i":"configure-the-package-management-system-yum","l":"Configure the package management system (yum)","p":["Create a /etc/yum.repos.d/mongodb-org-5.0.repo file so that you can install MongoDB directly using yum:","You can also download the .rpm files directly from the MongoDB repository. Downloads are organized by Red Hat / CentOS version (e.g. 7), then MongoDB release version (e.g. 5.0), then architecture (e.g. x86_64).","Prior to MongoDB 5.0, odd-numbered MongoDB release versions, such as 4.3, were development releases. Beginning with MongoDB 5.1, MongoDB has quarterly rapid releases. For more information on the differences between rapid and long-term support releases, see MongoDB Versioning."]},{"l":"Install the MongoDB packages"},{"l":"Run MongoDB Community Edition"},{"l":"Directory Paths"},{"i":"to-use-default-directories","l":"To Use Default `Directories","p":["By default, MongoDB runs using the mongod user account and uses the following default directories:","/var/lib/mongo(the data directory)","/var/log/mongodb(the log directory)"]},{"l":"To Use Non-Default Directories","p":["To use a data directory and/or log directory other than the default directories:"]},{"l":"Create the new directory or directories","p":["Edit the configuration file /etc/mongod.conf and modify the following fields accordingly:","storage.dbPath to specify a new data directory path ( e.g. /some/data/directory)","systemLog.path to specify a new log file path (e.g. /some/log/directory/mongod.log)","Ensure that the user running MongoDB has access to the directory or directories:","If you change the user that runs the MongoDB process, you must give the new user access to these directories."]},{"l":"Permit Access to netstat for FTDC","p":["The current SELinux Policy does not allow the MongoDB process to open and read /proc/net/netstat, which is required for Full Time Diagnostic Data Capture (FTDC). If you intend to run SELinux in enforcing mode, you will need to make the following adjustment to your SELinux policy:","Ensure your system has the checkpolicy package installed:","Create a custom policy file mongodb_proc_net.te:","Once created, compile and load the custom policy module by running these three commands:"]},{"l":"Using a Custom MongoDB Directory Path","p":["Update the SELinux policy to allow the mongod service to use the new directory:","where specify one of the following types as appropriate:","NOTE Be sure to include the .* at the end of the directory.","Update the SELinux user policy for the new directory:","mongod_var_lib_t for data directory","mongod_log_t for log directory","mongod_var_run_t for pid file directory","Apply the updated SELinux policies to the directory:"]},{"l":"Start MongoDB","p":["You can start the mongod process by issuing the following command:","If you receive an error similar to the following when starting mongod:","Run the following command first:","Then run the start command above again.","Verify that MongoDB has started successfully. You can verify that the mongod process has started successfully by issuing the following command:","You can optionally ensure that MongoDB will start following a system reboot by issuing the following command:"]},{"l":"Stop MongoDB","p":["As needed, you can stop the mongod process by issuing the following command:"]},{"l":"Restart MongoDB","p":["You can restart the mongod process by issuing the following command:","You can follow the state of the process for errors or important messages by watching the output in the /var/log/mongodb/mongod.log file."]},{"l":"Begin using MongoDB","p":["Start a mongosh session on the same host machine as the mongod. You can run mongosh without any command-line options to connect to a mongod that is running on your localhost with default port 27017.","For more information on connecting using mongosh, such as to connect to a mongod instance running on a different host and/or port, see the mongosh documentation.","To help you start using MongoDB, MongoDB provides Getting Started Guides in various driver editions. For the driver documentation, see Start Developing with MongoDB."]},{"l":"Uninstall MongoDB Community Edition","p":["To completely remove MongoDB from a system, you must remove the MongoDB applications themselves, the configuration files, and any directories containing data and logs. The following section guides you through the necessary steps.","This process will completely remove MongoDB, its configuration, and all databases. This process is not reversible, so ensure that all of your configuration and data is backed up before proceeding."]},{"l":"MongoDB Stop","p":["Stop the mongod process by issuing the following command:"]},{"l":"Remove Packages","p":["Remove any MongoDB packages that you had previously installed."]},{"l":"Remove Data Directories","p":["Remove MongoDB databases and log files."]}],[{"l":"How To Install Nginx on CentOS 7"},{"i":"step-oneadd-nginx-repository","l":"Step One—Add Nginx Repository","p":["To add the CentOS 7 EPEL repository, open terminal and use the following command:"]},{"i":"step-twoinstall-nginx","l":"Step Two—Install Nginx","p":["Now that the Nginx repository is installed on your server, install Nginx using the following yum command:","After you answer yes to the prompt, Nginx will finish installing on your virtual private server (VPS)."]},{"i":"step-threestart-nginx","l":"Step Three—Start Nginx","p":["Nginx does not start on its own. To get Nginx running, type:","However I got the following error: Unregistered Authentication Agent for unix-process:11220:2470754","This seems to be an SELinux Issue, and since I don't have a read need for SELinux, I will just disable is: Disable SELinux","But that did not fix the problem either, so in the end it was because both NginX and Apache wants to use Port 80 and Apache was already using it. For now I'm leaving this as is, I will figure out later how to run both at the same time or I will set NginX to listen on a different port","If you are running a firewall, run the following commands to allow HTTP and HTTPS traffic:","You can do a spot check right away to verify that everything went as planned by visiting your server’s public IP address in your web browser (see the note under the next heading to find out what your public IP address is if you do not have this information already):","http://server_domain_name_or_IP/ You will see the default CentOS 7 Nginx web page, which is there for informational and testing purposes. It should look something like this:","Nginx Example","If you see this page, then your web server is now correctly installed.","Before continuing, you will probably want to enable Nginx to start when your system boots. To do so, enter the following command:"]},{"i":"how-to-find-your-servers-public-ip-address","l":"How To Find Your Server’s Public IP Address","p":["To find your server’s public IP address, find the network interfaces on your machine by typing:","You may see a number of interfaces here depending on the hardware available on your server. The lo interface is the local loopback interface, which is not the one we want. In our example above, the eth0 interface is what we want.","Once you have the interface name, you can run the following command to reveal your server’s public IP address. Substitute the interface name you found above:"]},{"l":"Server Root and Configuration","p":["If you want to start serving your own pages or application through Nginx, you will want to know the locations of the Nginx configuration files and default server root directory."]},{"l":"Default Server Root","p":["The default server root directory is /usr/share/nginx/html. Files that are placed in there will be served on your web server. This location is specified in the default server block configuration file that ships with Nginx, which is located at /etc/nginx/conf.d/default.conf."]},{"l":"Server Block Configuration","p":["Any additional server blocks, known as Virtual Hosts in Apache, can be added by creating new configuration files in /etc/nginx/conf.d. Files that end with .conf in that directory will be loaded when Nginx is started."]},{"l":"Nginx Global Configuration","p":["The main Nginx configuration file is located at /etc/nginx/nginx.conf. This is where you can change settings like the user that runs the Nginx daemon processes, and the number of worker processes that get spawned when Nginx is running, among other things."]}],[{"l":"Install Whiptail","p":["Whiptail is used for creating gui interfaces for bash, I want to create a basic menu system where I start and stop services and edit some config files that I'm looking for","Install whiptail by using the following command:","Whiptail Usage, look at Tips & Tricks"]}],[{"l":"Install PostgreSQL","p":["Run the following command to install PostgreSQL.","Now initialize the database using the following command.","Start and enable PostgreSQL database service using the following command.","Now run the following command to change the password of PostgreSQL root user called postgres using the following command.","Enter \\q or ctrl + D buttons to exit Postgres shell."]}],[{"i":"install-portainer-20-on-your-docker","l":"Install Portainer 2.0 on your Docker"},{"l":"Prerequisites","p":["Centos 7.x, Centos 8.x, Ubuntu 18.04, Ubuntu 20.04","Commands and instructions may vary slightly on other CentOS 7 releases and Linux distributions.","1024MB or above Ram.","20GB Disk Space.","1 vCPU or above CPU.","Docker engine running on target host – Can be local or remote","Linux, macOS or Windows docker host machine","Internet connection to download Portainer docker image"]},{"l":"What Portainer can do","p":["Manage Docker images – pull, delete, Build","Quickly deploy applications from app templates","Manage containers – start, stop, kill, restart, pause, resume, remove, create","Manage networks – add, remove, edit","Manage Volumes – add, remove, manage permissions","Check docker engine events","Add custom docker registry and add authentication for docker hub","Create endpoints","Add users to manage Docker","Manage Docker swarm","Create custom container templates"]},{"l":"Installing Portainer"},{"i":"step-1---first-step","l":"Step 1 - First step","p":["Access the website portainer.io and then the installation option","Img1","Create a volume for Portainer with the following command","After the volume has been created, run the command below on your terminal:","We will use the latest version of portainer.io which is 2.0, the above command is from Docker I am considering that you already have experience with the basic commands."]},{"i":"step-2---check-if-portainerio-is-running-on-docker","l":"Step 2 - Check if portainer.io is running on Docker","p":["Ready your portainer.io is already installed and running on its default port which is SERVER_IP: 9000 as you can see in our image.","img2","Portainer.io has several services that can help us in our daily lives, such as:","Portainer CE for Kubernetes Portainer CE for Swarm Portainer CE for Edge Portainer CE for ACI But we are not done here! I will show some functions inside the panel if your Docker is working correctly to access the UI by typing the following in your browser.","Note. SERVER_IP is the address of the Docker server","The first step will be like basic settings which, in general, is fast, you will have to define an administrator password and the environment you want to control, choose the local environment."]},{"i":"step-3---accessing-the-panel","l":"Step 3 - Accessing the panel","p":["After making the initial settings, you will see the following image in your browser:","img3","In the Portainer home screen, all Endpoints (environments) configured will appear. In my configuration, I will have two, one corresponding to the local environment and another environment that is connected to the LetsCloud.","img","In your case, select the local Endpoint to view your portainer.io.","On my initial Dashboard, I can see my stacks, containers, volumes, services, images and networks. In this post, we will focus on containers and how to connect in a second environment (Endpoints)."]},{"i":"step-4---downloading-and-configuring-docker-image-on-your-portainer","l":"Step 4 - Downloading and configuring Docker image on your Portainer","p":["In our first example, we will use the WordPress installation, where we will do the initial setup on the dashboard our portainer.io.","After selecting the option containers we will see the following screen:","img3","Then portainer.io will present the following screen:","Name: define the name of your container Image: Name of the image in DockerHub Configuration of network ports: I suggest you enable the option to Publish all exposed network ports and then set port 80 manually, as shown in the image above."]},{"i":"step-5---deploying","l":"Step 5 - Deploying","p":["Click Deploy the container to start downloading the image and then start your container automatically.","img3","If everything works as expected, you will see WordPress container running on port 80. Use your browser to view the WordPress Welcome page."]},{"i":"step-6---endpoints","l":"Step 6 - Endpoints","p":["We arrived at the second and last part of our post, but don't stop here portainer.io has many functions to be explored!","img3","After you select the option endpoints we will have some options like:","Agent - Portainer agent Edge Agent - Portainer Edge agent Docker - Directly connect to the Docker API Azure - Connect to Microsoft Azure ACI","In our tutorial, we will only use Agent and for that, we need to run the agent on our second docker that is in our cloud on LetsCloud."]},{"i":"step-7---installing-the-agent","l":"Step 7 - Installing the Agent","p":["Note. Just to remember, you must have Docker working at the destination!","Ready! If everything goes as expected, the agent will appear as running on your docker.","img3","To test the functioning of your new machine, go to your portainer.io home screen.","Access the machine you just connected and repeat our installation of WordPress on the second machine.","So, did you like the content? You can't help but know how to update WordPress, as updates are an important part of system security, they improve performance and bring new features. Also, updating your site requires only a few clicks. It's simple, fast and essential!","Last tip: Before starting a project in production with portainer.io, research the limitations of your UI and if it will meet all your needs in the course of the project.","A very good place to search is the official forum, he also has Blog, channels on, Discord and a good documentation.","The hello-world container is only a simple container used to verify if the Docker engine is working correctly in the system and if the Portainer can start a container on the board. We will build more complex containers in the next sections."]},{"l":"Update Portainer"},{"l":"Remove Prev Version","p":["If it is not finding the portainer images, then they probably running the portainer with a custom name image on a custom, name, run the following running on a command:","You can then stop the container referring to it's name","Now that you have stopped and removed the old version of Portainer, you must ensure that you have the","latest version of the image locally. You can do this with a docker pull command:","Finally, deploy the updated version of Portainer, or read next paragraph for SSL","To provide your own SSL certs you may use --sslcert and --sslkey flags as below to provide the certificate and key files. The certificate file needs to be the full chain and in PEM format.","The newest version of Portainer will now be deployed on your system, using the persistent data from the previous version, and will also upgrade the Portainer database to the new version. When the deployment is finished, go to https://your-server-address:9443 or http://your-server-address:9000 and log in. You should notice that the update notification has disappeared and the version number has been updated."]}],[{"l":"Install MariaDB on CentOS 7"},{"i":"benefits-of-mariadb-server-104","l":"Benefits of MariaDB Server 10.4","p":["While CentOS 7 and RHEL 7 include MariaDB Server 5.5, substantial improvements have been made as MariaDB Community Server changed through the 10.0, 10.1, 10.2, 10.3, and 10.4 release series. The MariaDB Server 10.4 release series includes:","Instant ALTER for InnoDB tables","Optimizer trace to aid in performance diagnosis","Window functions and Common Table Expressions (CTE)","Temporal tables, including system-versioned, application time-period, and bitemporal(both)","Ability to reload SSL certificates without server restart","Galera 4 technology, a major enhancement over Galera 3","Additional storage engines, including MyRocks","SQL_MODE= ORACLE for compatibility with a subset of Oracle PL/SQL","Expanded data-at-rest encryption","Authentication enhancements, including multiple authentication methods per user"]},{"l":"To install MariaDB and dependencies"},{"l":"Configuring and Securing MariaDB Server","p":["Start the systemd service for MariaDB Server 5.5 or 10.4 using systemctl:","Specific security practices should always follow any business-specific requirements and governance. Some basic steps should be taken to help harden the MariaDB Community Server 5.5 or 10.4 deployment:"]}],[{"i":"how-to-install-python-3-on-centos-77-using-yumsource-and-set-as-default","l":"How to Install Python 3 on CentOS 7.7 using yum/source and set as Default","p":["The CentOS 7 Linux distribution includes Python 2 by default. However, Python 2 has reached its EOL on January 1, 2020.","In this tutorial, we are going to take a look at how to get up and running with Python 3 on a CentOS 7 server.","These instructions assume that your server has CentOS release 7.7."]},{"l":"Yum Installation","p":["In CentOS 7 releases prior to 7.7, it was necessary to make Python 3 available for installation by setting up third-party repositories, such as the IUS repository, because the CentOS base repository did not provide a Python 3 package. Thankfully, as of CentOS 7.7, Python 3 is available in the base package repository!"]},{"i":"step-1-update-the-environment","l":"Step 1: Update the environment"},{"i":"step-2-install-python-3","l":"Step 2: Install Python 3","p":["That’s it! Python 3 is now installed! Another helpful idea to consider is that PIP, the Python package manager for Python 3, is installed alongside the Python 3 package, so we don’t have to worry about that as an additional installation step."]},{"i":"step-3-setup-the-environment","l":"Step 3: Setup the Environment","p":["Install development tools and some prerequisite packages."]},{"i":"step-4-set-python-3-as-default","l":"Step 4: Set Python 3 as default"},{"l":"Verify Installation","p":["In order to ensure that Python 3 is in fact installed and useable, we can drop into a Python 3 shell by running the following command.","You should see the version of Python 3 installed on your system as well as a change in the command prompt characters."]},{"l":"Fix for Yum install Errors","p":["Yum package manager usage python2 by default so after you make python3 as default the yum will break.","To fix this change the python interpreter to /usr/bin/python2.7 in two files"]},{"l":"Source Installation","p":["Installing Python 3 via the Yum package manager is by far the simplest way to get the job done. However, in some cases, you might want to have the most recent version of Python available and that’s where a source installation can come in handy."]},{"i":"step-1-setup-the-environment","l":"Step 1: Setup the Environment","p":["In order to install Python 3 from source, we are going to need to ensure that some prerequisite packages are installed on our system."]},{"i":"step-2-download-python","l":"Step 2: Download Python","p":["Next, we need to grab the version of Python we want. The following command will pull down the latest stable version of Python 3.8 as of the writing of this article.","Now we need to extract the file."]},{"i":"step-3-install-python-3","l":"Step 3: Install Python 3","p":["Now that it’s extracted, let’s change into the resultant directory.","Next, we need to prepare to compile Python from source.","Finally, we are going to use the following command to finish off the installation, without replacing the default system Python on our system.","Compiling code from source takes a little while, but once that’s finished, we can test out our new Python 3 version by running the following command.","Much like before when we installed Python 3.6 via Yum, we are dropped into a Python shell that outputs the version we are currently using.","Python 3.8.1 (default, Dec 27 2019, 17:12:30)"]}],[{"l":"Installing Redis on CentOS 7","p":["Redis package is not included in the default CentOS repositories. We will be installing Redis version 5.0.2 from the Remi repository.","The installation is pretty straightforward, just follow the steps below:","Start by enabling the Remi repository by running the following commands in your SSH terminal:","Install the Redis package by typing:","Once the installation is completed, start the Redis service and enable it to start automatically on boot with:","To check the status of the service enter the following command:","You should see something like the following:","Redis service will fail to start if IPv6 is disabled on your server.","Congratulations, at this point you have Redis installed and running on your CentOS 7 server."]},{"l":"Configure Redis Remote Access","p":["Assuming you are using FirewallD to manage your firewall and you want to allow access from the 192.168.121.0/24 subnet you","At this point, Redis server will accept remote connections on TCP port 6379.","By default, Redis doesn’t allow remote connections. You can connect to the Redis server only from 127.0.0.1 (localhost) - the machine where Redis is running.","Locate the line that begins with bind 127.0.0.1 and add your server private IP address after 127.0.0.1.","Make sure you replace 192.168.121.233 with your IP address. Save the file and close the editor.","Make sure your firewall is configured to accept connections only from trusted IP ranges.","Next, you’ll need to add a firewall rule that enables traffic from your remote machines on TCP port 6379.","Perform the following steps only if you want to connect to your Redis server from remote hosts. If you are using a single server setup, where the application and Redis are running on the same machine then you should not enable remote access.","Restart the Redis service for changes to take effect:","The command should return a response of PONG:","The commands above create a new zone named redis, opens the port 6379 and allows access from the private network.","To configure Redis to accept remote connections open the Redis configuration file with your text editor:","To verify that everything is set up properly, you can try to ping the Redis server from your remote machine using the redis-cli utility which provides a command-line interface to a Redis server:","Use the following ss command to verify that the Redis server is listening on your private interface on port 6379:","would run the following commands:","You should see something like below:"]}],[{"l":"Retype Install","p":["Retype is an ✨ ultra-high-performance ✨ generator that builds a website based on simple text files. Focus on your writing while Retype builds the rest."]},{"l":"Install via NPM"},{"l":"Basic Usage","p":["I recommend the following:","When you have a bunch of markdown files in a folder you want to create a wiki from, then create two folders in side the current root folder of the markdown folders","Now all the files are in /var/www/docs/src and you will have retype.yml file in /var/www/docs","Open retype.yml"]}],[{"l":"How to disable SELinux on a CentOS 7","p":["The procedure to remove and disable SELinux security features is as follows:","Log in to your server","Check the current SELinux status, run: sestatus","To disable SELinux on CentOS 7 temporarily, run: sudo setenforce 0","Edit the /etc/selinux/config file and set the SELINUX to disabled","Reboot the Linux server","Verify it by running the sestatus and getenforce again","let us see all commands, examples and usage in details."]},{"l":"How to find out SELinux status on CentOS 7","p":["Run the following sestatus command","Check inline","Another option is to run the following command to"]},{"l":"print the current mode of SELinux"},{"l":"Another option is to runt the following cat command"},{"l":"Different types of security policy","p":["The /etc/selinux/config file controls the state of SELinux on the system. SELINUX= can take one of these three values:","enforcing– SELinux security policy is enforced. permissive– SELinux prints warnings instead of enforcing ( disabled). disabled– No SELinux policy is loaded ( disabled). SELINUXTYPE= can take one of following:","targeted– Targeted processes are protected. minimum– Modification of targeted policy. Only selected processes are protected. mls– Multi Level Security protection. Warning: The author does not recommend disabling SELinux and is not responsible for security problems on your Linux-based server"]},{"l":"Disable SELinux","p":["You can modify the mode SELinux is running in using the setenforce command. For example, to put SELinux in enforcing mode, run:","To put SELinux in permissive mode i.e. disabled mode:","Please note that is temporary solution to disable SELinux without rebooting the server and active for the current session only. Hence, use the following method for disabling SELinux forever."]},{"l":"Disabling SELinux permanently","p":["Edit the /etc/selinux/config file, run:","Set SELINUX to disabled:","Save and close the file in vi/vim. Reboot the Linux system:","After reboot, make sure following commands gives Disabled output indicating that SELinux removed and disabled on your Linux server:","Disable-SELinux"]}],[{"l":"Set SSH Port","p":["I did npt believe this to be a big issue but every time I login to my server I get a message like this:","There were 46 failed login attempts since the last successful login. Last login: Thu Jan 20 01:15:50 2022 from 197.89.36.53","And this was in the time span of 15min, so just to be safe, I am rather changing the port number:"]},{"l":"How SSH port on CentOS 7","p":["Step 1: First, open /etc/ssh/sshd_config and search for the following Port 229 and make sure to choose an unused/not-well-known port (at least >1023).","Step 2: To open a port on firewallD, use the following command:"]},{"l":"SELinux Configuration","p":["Configure SELinux to behave with the new port by typing the following command:"]},{"l":"Fail2Ban Settings","p":["`semanage port -a -t ssh_port_t -p tcp 3456``","After the execution of these commands, Fail2Ban will not be able to close the appropriate port.","If you face the following error when restarting the SSHD:","job for sshd.service failed because the control process exited with error code. See \"systemctl status sshd.service\" and journalctl -xe for details.","Now you have told SSHD not to listen on port 22, which is the default port.","Once you complete the aforementioned steps successfully, finalize the settings and mop up, meaning use the new port rather than the previous one.","Run journalctl –xe by the command:","Step 1: Open /etc/fail2ban/jail.conf and search for the following section to configure Fail2Ban:","Step 2: Now, change the values of the port to the actual port by using the following commands. This example shows port 7222:","Step 3: Now, type the following commands to test the new configurations:","Step 4: Configure the SSH daemon, open /etc/ssh/sshd_config delete/comment out the Port 22 in it.","Step 5: It is time to finalize the firewall configuration:","Step 6: You have to run the following commands to set the changes for the system:","Step 7: Now, you can verify that SELinux has allowed SSHD to listen on the two ports:","Step 8: Next, type this command:","The output should look like this:","Upon execution of the command you will get an output like this:","You can also try to connect via SSH to the server with the new port:","yum whatprovides semanage"]}],[{"l":"Install SSL Certificates","p":["SSL Certificates are small data files that certify ownership of a public cryptographic key. Certificate Authorities (CA) guarantee that the key belongs to an organization, server, or other entity listed in the certificate.","When a user, via their browser, accesses a certified website, the information is encrypted with a unique public key. The data can only be decrypted by using a unique private key located on the host server. This high level of encryption prevents unauthorized attempts to access the information."]},{"l":"Prerequisites","p":["A user with sudo privileges","Access to a command line ( Ctrl-Alt-T)","A CentOS 7 machine","A valid domain name with DNS pointed at the server"]},{"l":"How to Get an SSL Certificate","p":["There are several ways to obtain Certificates:","Using an automated and free certificate authority such as the Let’s Encrypt project.","Commercial certificate authorities provide certificates for a fee (Comodo, DigiCert, GoDaddy)","Alternatively, it is possible to create a self-signed certificate. This type of certificate is useful for testing purposes or for use in a development environment.","If you are still considering what type of certificate you need, or which CA to choose, we’ve prepared a comprehensive guide to SSL certificates, private keys, and CSRs to assist you in the process.","Note: Trusted CAs do not verify self-signed certificates. Users cannot use it to validate the identity of their server automatically."]},{"i":"install-ssl-certificate-with-lets-encrypt","l":"Install SSL Certificate with Let’s Encrypt","p":["Let’s Encrypt is a free, open, and automated certificate authority. It uses the certbot software tool to administer certificates automatically.","Certbot is a highly automated tool. Make sure that that your Apache installation is valid and that you have a virtual host configured for your domain/s. You should first read our tutorial on how to install Apache on CentOS 7 if you need assistance with configuring your firewall and virtual hosts."]},{"l":"Certbot Installation","p":["Use the command terminal to install the EPEL repository and yum-utils:","Next, install a module that supports SSL for Apache:","In this example, the latest version of the module is already available.","term","We can now install certbot for Apache:","sudo yum –y install python-certbot-apache","Once the installation runs its course, you can start the process to obtain a certificate by entering:","Alternatively, start certbot by typing:","The client asks you to provide an email address and to read and accept the Terms of Services. Certbot then lists the domains available on your server. Activate HTTPS for specific domains or all of them by leaving the field blank.","term2","The next prompt allows you to force all requests to secure HTTPS access.","Once you have made your choices, the message on the terminal confirms that you have enabled encryption for your domain."]},{"l":"Automatic Certificate Renewal","p":["The certificates issued by Let’s Encrypt are valid for 90 days. The certbot renew command checks the installed certificates and tries to renew them if they are less than 30 days away from expiration. To automate this process, create a cron job to execute the command periodically.","Use your preferred text editor to define how often to execute the renew command:","Enter this line and save the crontab:"]},{"l":"How to Install SSL Certificate with Comodo","p":["The first step is to submit a Certificate Signing Request to a Certification Authority. Our detailed guide on how to generate a certificate signing request (CSR) with OpenSSL is an excellent resource if you need assistance with this process.","Once a CA certifies your request, you receive a copy of your SSL certificate. You can now install the certificate on your CentOS 7 server.","This example shows how to install a certificate from a paid SSL provider, Comodo.","Once Comodo verifies your CSR the request, download the SSL files. Copy them (ComodoRSACA.crt) and the Primary Certificate (yourdomain.crt), to your Apache server directory. The private key generated during the CSR (Certificate Signing Request) process needs to be on the same server."]},{"l":"Configure Virtual Hosts for SSL","p":["Access the SSL configuration file:","After making the necessary changes, exit the file (Ctrl+X), and press y to save the changes.","After you have successfully certified the domain and placed the key files on the server, the next step will be to configure the virtual hosts to display the certificate.","DocumentRoot “/var/www/yourdomain.com”","Edit the configuration file to point to the correct files on your server.","General Host for Virtual Host","Once the system confirms that the syntax is correct, restart Apache:","ServerName yourdomain.com: 443","SSLCertificateChainFile– The intermediate COMODO certificate file.","SSLCertificateFile – The path of your certificate file.","SSLCertificateKeyFile – The path of your key file.","SSLEngine on","ter3","Ter5","Test your Apache configuration before restarting. Make sure that the syntax is correct by typing:","Uncomment the following lines under section <VirtualHost_default_:443> and enter the correct file paths:","You have now set up your Apache server to use the SSL certificate."]},{"l":"How to Create a Self-signed SSL Certificate","p":["-keyout– indicates the domain you’re generating a key for","-new -newkey– generate a new key","-nodes– no DES, meaning do not encrypt the private key in a PKCS#12 file","-out– specifies the name of the file that contains the CSR","-x509– specifies to use the X.509 signing request","–days 365– number of days that the certificate is valid for","A self-signed certificate is useful for testing, in development environments, and on an intranet.","As with Let’s Encrypt, the mod_ssl Apache module provides support for the SSL encryption:","Challenge password– define an optional password for your key pair","Common name– most often, the fully qualified domain name (FQDN)","Country Name– use a 2-letter country code","Create a new directory to store the private key:","Email address– contact email address","Enter your information in the available fields:","Generate a self-signed certificate using this OpenSSL command:","Locality– the city where the domain owner is incorporated in","Note: Make sure to replace yourdomain with your actual domain.","openssl– activates the OpenSSL software","Organization name – an entity that owns the domain","Organizational unit name–the department or group in your organization that works with certificates","questionnaire","req– indicates that we require a CSR","Restrict access to that directory only to the root user:","rsa:2048– generate a 2048-bit RSA mathematical key","State– the state where the domain owner is incorporated in","The image represents an example questionnaire in CentOS 7.","The system launches a questionnaire for you to fill out.","This is a detailed overview of the elements:"]},{"l":"Example questionnaire in CentOS 7","p":["Proceed to configure the virtual host to display the new certificate. The process is identical to the steps outlined in Chapter 2, Configure Virtual Hosts for SSL.","Test your Apache configuration before restarting. To make sure that the syntax is correct, type:","Once the system confirms that the syntax is correct, restart Apache:","You have now set up your Apache server to use your self-signed SSL certificate and should be able to visit your site with SSL enabled."]},{"i":"how-to-check-if-a-ssl-certificate-is-valid","l":"How to Check if a SSL Certificate is Valid?","p":["To check if a SSL Certificate is valid you can publicly available services, such as the SSL Server Test. Confirm the status of your certificate, and to check if all the details are correct.","Alternatively, access your website using https:// to see if the SSL certificate is visible. The green padlock indicates that the additional layer of encryption is present"]}],[{"l":"Update TAR","p":["The version of tar that comes it CentOS 7 has a few security updates so it is important to update tar before continuing to setup your server, it is very simple:"]},{"l":"Get Current Version","p":["You cam have a look at your version of tar like this"]},{"l":"Update tar"}],[{"l":"Install Tomcat Server","p":["Tomcat is an application server for JAVA applications. Run the following command to create tomcat user and group.","The above command will create a group named tomcat.","The above command will create a user tomcat having no login shell and home directory as /opt/tomcat.","Now download the Tomcat archive from Tomcat download page using the following command.","Now we will install the tomcat server in /opt/tomcat directory. Create a new directory and extract the archive using the following command","Now provide the ownership of the files to tomcat user and group using the following command."]}],[{"l":"Adding some users","p":["For me it is firstly important to obviously have a root user, with a good strong password.","Then to have another user in the sudo group that will be my every day user","Then I might add some more users for some actual users","Some users for some specific packages","I already updated the root user's password to something else by using this command:"]},{"l":"Update root password"},{"l":"Verify the Wheel Group is Enabled","p":["Update sudo to allow all commands","Scroll through the configuration file until you see the following entry:","If the second line begins with the # sign, it has been disabled and marked as a comment. Just delete the # sign at the beginning of the second line so it looks like the following:"]},{"l":"Add new sudo user","p":["Then I created a new user that I used my initials for, lets say cc"]},{"l":"Add cc to sudo group"},{"l":"Switch to the Sudo User","p":["Switch to the new (or newly-elevated) user account with the su (substitute user) command:","Enter the password if prompted. The terminal prompt should change to include the UserName.","Enter the following command to list the contents of the /root directory:"]},{"i":"alternative-add-user-to-sudoers-configuration-file","l":"Alternative: Add User to Sudoers Configuration File","p":["If there’s a problem with the wheel group, or administrative policy prevents you from creating or modifying groups, you can add a user directly to the sudoers configuration file to grant sudo privileges."]},{"i":"step-1-open-the-sudoers-file-in-an-editor","l":"Step 1: Open the Sudoers File in an Editor","p":["In the terminal, run the following command:","This will open the /etc/sudoers file in a text editor."]},{"i":"step-2-add-the-new-user-to-file","l":"Step 2: Add the New User to file","p":["Scroll down to find the following section:","Right after this entry, add the following text:","Replace UserName with the username you created in Step 2. This section should look like the following:","Save the file and exit."]},{"i":"step-3-test-sudo-privileges-for-the-user-account","l":"Step 3: Test Sudo Privileges for the User Account","p":["Switch user accounts with the su (substitute user) command:","Enter the password for the account, if prompted. The terminal prompt should change to include UserName.","List the contents of the /root directory:","Enter the password for this user when prompted. The terminal should display a list of all the directories in the /root directory."]}],[{"l":"Install Vault","p":["Vault stores, controls, and protects the data used for authentication and authorization. Vault is a management system for secrets, restricting or approving access to passwords, certificates, or APIs. It also provides data encryption, on-demand secrets, and revocation."]},{"l":"Install yum-config-manager"},{"l":"Add the HashiCorp Repo"},{"l":"Install"},{"l":"Verifying the Installation"},{"l":"Run Vault as a Service","p":["To run Vault as a service, you also need to create a new Systemd service file","Then, add the content below:","Enable and start the service with the commands:"]},{"l":"Prepare to Administer Vault","p":["The next step is to move the Vault bin directory to the PATH environment variable with the command:","Followed by setting the environment variables for Vault by typing:"]},{"l":"Initialize and Unseal your Vault","p":["To initialize and unseal Vault, you will first need to start Vault as a server in the dev mode. However, make sure not to run a dev server in production.","Run the following command:","The command produces an output that includes the server configuration, the unseal key, and root token. Save the unseal key and root token values, as you will need them in the next steps.","Note: As Vault does not fork, you need to open another shell or terminal to run the following commands.","Start by setting the environment variable. You will find this command as part of the output from the previous steps:","Then, run the following command with the information from the dev server’s output:","Check the status of the server:","The output should display that Vault is now initialized and no longer sealed."]}],[{"l":"Install Multiple Version of PHP on same server"},{"l":"Prerequisites","p":["Remove all versions of php, Make sure to back up any configuration files.","Then remove the rest of the package extensions."]},{"i":"step-1--installing-php-versions-74-and-81-with-php-fpm","l":"Step 1 — Installing PHP Versions 7.4 and 8.1 with PHP-FPM","p":["After installing both PHP versions, start the php74-php-fpm service and enable it to start at boot with the following commands:","And then verify the status of php81-php-fpm service with the following commands:","At this point you have installed two PHP versions on your server. Next, you will create a directory structure for each website you want to deploy.","Copy","First let’s discover what versions of PHP 7 are available on Remi:","Install most uses extensions","Lets start to installing php74 and php74-php-fpm:","Next, disable the default PHP module and enable Remi’s PHP7.4 module using the below command:","Next, verify the status of php74-php-fpm service with the following commands:","Now repeat the process for PHP version 8.1. Install php81 and php81-php-fpm.","php74 is a metapackage that can be used to run PHP application.","php74-php-fpm provides the Fast Process Manager interpreter that runs as a daemon and receives Fast/CGI requests.","Repeating this process, now start the php81-php-fpm service and enable it to start at boot with the following commands:","The command above will also enable the EPEL repository.","With the prerequisites completed, you will now install PHP versions 7.4 and 8.1, as well as PHP-FPM and several additional extensions. In order to install multiple versions of PHP, you will need to install and enable the Remi repository to your system. Which also offers the latest versions of the PHP stack on CentOS 8 system.","You can add the both repository to your system using the below commands:","You’ll see an output like this:","You’ll see the following output:"]},{"i":"step-2--creating-directory-structures-for-both-websites","l":"Step 2 — Creating Directory Structures for Both Websites","p":["In this section, you will create a document root directory and an index page for each of your two websites.","First, create document root directories for both site1.your_domain and site2.your_domain:","By default, Apache webserver runs as a apache user and apache group. To ensure that you have the correct ownership and permissions of your website root directories, execute the following commands:","The chown command changes the ownership of your two website directories to the apache user and the apache group. The chmod command changes the permissions associated with that user and group, as well as others.","Next you will create an info.php file inside each website root directory. This will display each website’s PHP version information. Begin with site1:","Add the following line:","/var/www/<>site1.your_domain<>/info.php","Save and close the file. Now copy the info.php file you created to site2:","Your web server now has the document root directories that each site requires to serve data to visitors. Next, you will configure your Apache web server to work with two different PHP versions."]},{"i":"step-3--configuring-apache-for-both-websites","l":"Step 3 — Configuring Apache for Both Websites","p":["In this section, you will create two virtual host configuration files. This will enable your two websites to work simultaneously with two different PHP versions.","In order for Apache to serve this content, it is necessary to create a virtual host file with the correct directives. You’ll create two new virtual host configuration file inside the directory /etc/httpd/conf.d/.","First create a new virtual host configuration file for the website site1.your_domain. Here you will direct Apache to render content using php7.4:","Add the following content. Make sure the website directory path, server name, and PHP version match your setup:","/etc/httpd/conf.d/site1.your_domain.conf","For DocumentRoot you are specifying the path of your website root directory. For ServerAdmin you are adding an email that the your_domain site administrator can access. For ServerName you are adding the url for your first subdomain. For SetHandler you are specifying the PHP-FPM socket file for php7.4.","Save and close the file.","Next, create a new virtual host configuration file for the website site2.your_domain. You will specify this subdomain to deploy php8.1:","Copy","Add the following content. Again, make sure the website directory path, server name, and PHP version match your unique information:","/etc/httpd/conf.d/site2.your_domain.conf","Save and close the file when you are finished. Then, check the Apache configuration file for any syntax errors with the following command:","You’ll see an output printing Syntax OK:","Finally, restart the Apache service to implement your changes:","Now that you have configured Apache to serve each site, you will test them to make sure the proper PHP versions are running."]},{"i":"step-4--testing-both-websites","l":"Step 4 — Testing Both Websites","p":["At this point, you have configured two websites to run two different versions of PHP. Now test the results.","Open your web browser and visit both sites http://site1.your_domain and http://site2.your_domain. You will see two pages that look like this:","PHP 7.4 info page PHP 8.1 info page","Note the titles. The first page indicates that site1.your_domain deployed PHP version 7.4. The second indicates that site2.your_domain deployed PHP version 8.1.","Now that you’ve tested your sites, remove the info.php files. Because they contain sensitive information about your server and are accessible to unauthorized users, they pose a security vulnerability. To remove both files, run the following commands:","You now have a single CentOS 8 server handling two websites with two different PHP versions. PHP-FPM, however, is not limited to this one application.","There are still a few things that could have gone wrong during the setup that I did not all handle in these docs, but here are some links if you get stuck:","https://www.linuxcapable.com/how-to-install-php-8-1-on-centos-8-stream/","https://stackoverflow.com/questions/63080021/php-installation-error-it-is-not-possible-to-switch-enabled-streams-of-a-modul","https://www.digitalocean.com/community/tutorials/how-to-run-multiple-php-versions-on-one-server-using-apache-and-php-fpm-on-centos-7","https://stackoverflow.com/questions/66043552/make-php7-and-php-8-live-together"]},{"l":"Conclusion","p":["You have now combined virtual hosts and PHP-FPM to serve multiple websites and multiple versions of PHP on a single server. The only practical limit on the number of PHP sites and PHP versions that your Apache service can handle is the processing power of your instance.","From here you might consider exploring PHP-FPM’s more advanced features, like its adaptive spawning process or how it can log sdtout and stderr. Alternatively, you could now secure your websites with free TLS/SSL certificates from Let’s Encrypt."]}],[{"l":"WebDav Setup"},{"l":"Introduction","p":["WebDAV (Web-based Distributed Authoring and Versioning) is an extension of the HTTP protocol that allows users to edit and manage documents and files stored on web servers.","WebDAV provides a framework for users to create, change, move, upload, and download documents on an Apache web server. This makes WebDAV a popular choice for developers, especially when combined with Subversion or Git.","You can easily mount WebDAV's data storage to the local filesystem. This can be done with the mount command or with a WebDAV-supported file manager such as Nautilus or Konqueror.","In this article I will explain some quick and easy steps to set up WebDAV with Apache on CentOS 7"]},{"l":"Requirements","p":["A server running CentOS v. 7 with Apache installed","A static IP address for your server","Install The WebDAV Module","The WebDAV module is included with the apache2 installation in CentOS 7, and is enabled by default. You can verify that the WebDAV module is running by using the following command:","If WebDAV is enabled, you will see the following output:"]},{"l":"Configure The WebDAV Directory","p":["After installing the WebDAV module, you will need to create a webdav directory. Here, we will create the webdav directory under the Apache web root directory.","Next, change the ownership (to the apache user) and the permissions for the webdav directory with the following commands:"]},{"l":"Set Up Password Authentication","p":["It is important to secure your webdav directory with a password. You can do this by creating an .htpasswd file.","To create it, run the following command:","This will create a password file for the user dev.","Now, you need to assign group ownership of the file to the apache user, and lock down the permissions for everyone else. To do this, run the following command:"]},{"l":"Configure An Apache Vhost For WebDAV","p":["Next, you need to create a virtual host file for the webdav directory. Start by creating a new site configuration file called webdav.conf.","Add the following content:","Now, restart Apache to activate the new configuration:"]},{"l":"Test WebDav","p":["Finally, WebDAV is ready for testing. Here, we will use a browser and a client to check WebDAV.","Test With A Web Browser","To test whether the authentication is working correctly or not, open your web browser and navigate to the URL http://your.server.ip/webdav/.","img1","You will be prompted for a user name and password to access WebDAV. Here, you will need to enter the user name and password we set before.","img2"]},{"l":"Test With A Command Line Client","p":["Here, we will use a WebDAV client called Cadaver. To install Cadaver, use the command below:","After installing Cadaver, you can test your WebDAV using the command below:","img3","If all went well, you will be asked to enter your user name and password for WebDAV. Then, You should be granted access which means that WebDAV is working correctly.","Some useful Cadaver command examples are listed below:","To upload a file to WebDAV:","To view/list the contents on WebDAV:","To create a new directory and navigate to it:","Once you are done, you can exit using the below command:"]}],[{"i":"lets-encrypt-free-wildcard-ssl-certificate","l":"Let's Encrypt Free Wildcard SSL Certificate"},{"l":"Via NginX Proxy Manager","p":["Here is the problem I'm facing... I want to have multi-level sub-domains for examele","*.docs.CRONje.ME","I would have thought a wildcard certificate for CRONje.ME would be sufficient, but it is not. A wildcard certificate for CRONje.ME only covers *.CRONje.ME and not for *.docs.CRONje.ME","So to get past this problem I need more wildcard certificates and I don't want to pay for them. So this is how:","The easiest way is to install NginX Proxy Manager","From there you can click on Add Proxy Host","On The SSL tab, Select request SSL Certificat","Either complete DNS Challenge or enter email address. But you can't request a wildcard certificat without DNS Chanllenge and my host ionos.com don't give out API keys for free"]},{"l":"Via Acme PHP","p":["Acme PHP is available as a single PHAR file to download on Github. For security purposes, this PHAR file is signed using OpenSSL to ensure you are using a valid Acme PHP binary.","Acme PHP Setup"]}],[{"i":"server--software-setup--cronjeme","l":"Server & Software Setup | CRONje.ME"},{"l":"Development Server Details","p":["Hostname: devserve.me","IP: 104.192.7.185","Server Location: USA","Hosting Provider: ionos.com","GIT Repo: github.com/charlpcronje/setup.docs.CRONje.ME","GIT Commit Messages: Git Commits"]},{"l":"Development Server Setup"},{"l":"Security","p":["Set SSH Port","Install Fail2Ban","SELinux Disable if Necessary","KeyBase End to end encryption"]},{"l":"Server Name and Users","p":["Set Hostname","Setup Users"]},{"l":"CentOS Package Managers","p":["Install DNF","Update TAR"]},{"l":"Web Hosting","p":["Install Apache on CentOS 7","Apache config","Install NginX","Setup NginX with Apache","Setup NginX Proxy Manager","SSL Certificates","Free Lets Encrypt SLL Certificates","Install Tomcat Server"]},{"l":"Virtual Hosts","p":["Setup Virtual Hosts","Directory Structure","Permissions","demoPages","createConfFiles","hostsFile"]},{"l":"WebDav Setup with Apache","p":["WebDav Setup"]},{"l":"Container Management","p":["Docker","Install Docker","Install Portainer for Containers","Docker Compose via Portainer","Install LazyDocker via GO"]},{"l":"System","p":["Install CWP Control Panel- Do not install","Install Cockpit Server Management","Install dutree"]},{"l":"File Management","p":["Install Double Commander","Install Cloud Commander","Install Droppy","Install Samba"]},{"l":"Databases","p":["Install CouchDB","Install Mongo DB","Install PostgreSQL","Install Redis"]},{"l":"Dashboards","p":["Install Heimdal Dashboard","Install Flame Dashboard","Install Dash Machine","Install Code Snippets"]},{"l":"Development","p":["Install newt Whiptail","Install PHP 8","Install Multiple Version of PHP on same server","Install Composer","Install Cloud9 IDE","Install Python 3","Install Node.js on CentOS 7","Install Node Version Manager","Install Golang on CentOS 7","Install Java"]},{"l":"Tools","p":["Install Firefox X11 Forwarding","Install Dillinger for MD","Install VS Code-Server 4**","Code-Server Extensions","Code-Server as Service"]}],[{"l":"Install GIT on CentOS 7","p":["Use yum, CentOS’s native package manager, to search for and install the latest git package available in CentOS’s repositories:"]},{"l":"Install Using Yum","p":["If the command completes without error, you will have git downloaded and installed. To double-check that it is working correctly, try running Git’s built-in version check:","Now I'm creating a config.etc repo on my GitHub Account."]},{"l":"Setup SSH Key for Github","p":["Select and copy the key contents","Go to github.com","Click on settings","Click SSH and PGP Keys","Click on new key","Paste key and give it a name","Click save","Done"]},{"l":"Upgrading GIT"},{"l":"Remove old git"},{"l":"Add End Point CentOS 7 repo","p":["The quickest way of installing the latest version of Git on CentOS 7 is from the End Point repository.","Once repository is added, install Git 2.x on CentOS 7","Check git version after installing git2u-all package"]}],[{"l":"ACME PHP","p":["Acme PHP is available as a single PHAR file to download on Github. For security purposes, this PHAR file is signed using OpenSSL to ensure you are using a valid Acme PHP binary."]},{"l":"Install ACME PHP","p":["Check the latest stabel release from: https://github.com/acmephp/acmephp/releases","Run following commands:","Get the AcmePHP Version","If the last command display the Acme PHP version, you are ready to use Acme PHP.","Use the latest development version","While we strongly recommand you to use a stable (or at least pre-release) version, you can also use the latest development build if you need the latest features.","You can install it by running the following commands:"]}],[{"l":"Installing Apache on CentOS 7"},{"i":"step-1-update-software-versions-list","l":"Step 1: Update Software Versions List","p":["Ensure you are using the latest versions of the software. In a terminal window, input the command:","The system should reach out to the software repositories and refresh the list to the latest versions."]},{"i":"step-2-install-apache","l":"Step 2: Install Apache","p":["To install Apache on your CentOS server, use the following command:","The system should download and install the Apache software packages."]},{"i":"step-3-activate-apache","l":"Step 3: Activate Apache","p":["To activate Apache, start its service first.","Enter the following command in a terminal window:","This will start the Apache service.","Next, set the Apache service to start when the system boots:"]},{"i":"step-4-verify-apache-service","l":"Step 4: Verify Apache Service","p":["Display information about Apache, and verify it’s currently running with:","I got the following message when I did a status check","AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1. Set the 'ServerName' d...this message","So from this I gather I should set the server name.","verifying the apache service is running"]},{"i":"step-5-configure-firewalld-to-allow-apache-traffic","l":"Step 5: Configure firewalld to Allow Apache Traffic","p":["In a standard installation, CentOS 7 is set to prevent traffic to Apache.","Normal web traffic uses the http protocol on Port 80, while encrypted web traffic uses the https protocol, on Port 443.","Modify your firewall to allow connections on these ports using the following commands:","Once these complete successfully, reload the firewall to apply the changes with the command:"]},{"i":"step-6-configure-virtual-hosts-on-centos-7-optional","l":"Step 6: Configure Virtual Hosts on CentOS 7 (optional)","p":["Apache Directories and Files One of the main ways Apache functions is through configuration files. They are located at /etc/httpd.","Apache has a main configuration file: /etc/httpd/conf/httpd.conf .","Commands For Managing Apache Service Other commands that you can use to control the Apache service include:","If there are any other configuration files, they are included in the main configuration file. They should use the .conf extension and should be stored in the /etc/httpd/conf.d/ directory.","In the editor, enter the following text:","Log files record all the activity of the Apache service, including client activity on the websites your system is hosting. These logs can be found in: /var/log/httpd/.","Make sure these configuration files use the .conf extension, and save them in the /etc/httpd/conf.d/ directory.","Next, enter the following command to create a directory for you to store your website files in:","Once the system finishes, you should be able to open a browser window to MyWebsite.com and see a default Apache test page.","Prevent or disable Apache from starting when the system boots:","Re-enable Apache at boot:","Restart Apache and apply any changes you have made:","Restart the Apache service to apply your changes by entering:","Save the file and exit.","Stop Apache Service:","The configuration files for these modules should be stored in: /etc/httpd/conf.modules.d/ directory.","There are a couple of best practices to use when you’re setting up different websites on the same server:","This will launch the Vi text editor, and create a new vhost.conf file in the /etc/httpd/conf.d directory.","To create a virtual host configuration file, enter the following into a terminal window:","Try to use the same naming convention for all your websites. For example:","Use a different configuration file for each domain. The configuration file is called a vhost, for a virtual host. You can use as many as you need. Keeping them separate makes troubleshooting easier.","Virtual hosts are different websites that you run from the same server. Each website needs its own configuration file.","You can enhance Apache’s functionality by loading additional modules.","You can replace MyWebsite above with the name of your domain. If you are hosting more than one domain, make sure you create a new directory in /var/www/ for each one. You can copy the code block in your /etc/httpd/conf.d/vhost.conf file, and replace MyWebsite with another domain name that you’re hosting."]}],[{"l":"Apache Config","p":["I went to devserve.me in my browser but nothing was showing, I check and apache was listening on port 80.","But the following settings needed to be changed.","The IP Address it was listening on needed to be changed from 127.0.0.1 to the server's IP address","The hostname it was listening on needed o be changed from www.example.com to the server's hostname","After I updated that and restarted the service, it work fine.","config file location /etc/httpd/conf/httpd.conf","Restart service"]}],[{"l":"Install Cloud9","p":["Cloud9 is a complete web based IDE with terminal access. This container is for running their core SDK locally and developing plugins."]},{"l":"Supported Architectures","p":["Our images support multiple architectures such as x86-64, arm64 and armhf. We utilise the docker manifest for multi-platform awareness. More information is available from docker here and our announcement here. Simply pulling lscr.io/linuxserver/cloud9 should retrieve the correct image for your arch, but you can also pull specific arch images via tags.","The architectures supported by this image are","Architecture","Tag","x86-64","amd64-latest","arm64","arm64v8-latest","armhf","arm32v7-lates"]},{"l":"Version Tags","p":["This image provides various versions that are available via tags. latest tag usually provides the latest stable version. Others are considered under development and caution must be exercised when using them.","Tag","Description","latest","Docker and Compose environment pre-installed","go","Basic Golang environment pre-installed","nodejs","Current stable NodeJS/NPM environment pre-installed","python","Current Python3 environment pre-installed","ruby","Current Ruby environment pre-installed"]},{"l":"Application Setup","p":["Access the webui at http://your-ip:5555,"]},{"l":"Usage","p":["To help you get started creating a container from this image you can either use docker-compose or the docker cli"]},{"l":"Parameters","p":["Docker images are configured using parameters passed at runtime (such as those above). These parameters are separated by a colon and indicate external: internal respectively. For example, -p 8080:80 would expose port 80 from inside the container to be accessible from the host's IP on port 8080 outside the container"]},{"i":"ports--p","l":"Ports (-p)","p":["Parameter","Function","8000","The port for the Cloud9 web interface","Environment Variables (-e)| Env | Function ||------------------------------------------------------------|--------------------------------------------------|| PUID=1000 | for UserID - see below for explanation || PGID=1000 | for GroupID - see below for explanation || TZ=Europe/London | Specify a timezone to use EG Europe/London || GITURL= https://github.com/linuxserver/docker-cloud9.git| Specify a git repo to checkout on first startup || USERNAME= | Optionally specify a username for http auth || PASSWORD= | Optionally specify a password for http auth |","if USERNAME and PASSWORD are not set, there will be no http auth"]},{"i":"volume-mappings--v","l":"Volume Mappings (-v)","p":["Volume","Function","/code","Optionally if you want to mount up a local folder of code instead of checking out","/var/run/docker.sock","Needed if you plan to use Docker or compose commands"]},{"i":"environment-variables-from-files-docker-secrets","l":"Environment variables from files (Docker secrets)","p":["You can set any environment variable from a file by using a special prepend FILE__. As an example:-e FILE__PASSWORD=/run/secrets/mysecretpassword"]}],[{"l":"Install Cloud Commander","p":["Cloud Commander is a file manager for the web. It includes a command-line console and a text editor. Cloud Commander helps you manage your server and work with files, directories and programs in a web browser from any computer, mobile or tablet."]},{"l":"Installation","p":["Installation is very simple:","Install the latest version of node.js. Install cloudcmd via npm with:","When in trouble, use:"]},{"l":"Cloud Commander as a Service","p":["Not an issue actually, just want to share how I was able to add cloudcmd on systemd to start at boot especially for newbies like me since I was not able to find a guide on how to do it","Don't forget to change YOUR_USER_HERE with your actual user","once done, run the below commands to start and enable cloudcmd on boot","now open your browser to url: http://localhost:8000/"]},{"l":"Usage","p":["To start the server, just run the global npm binary from your terminal:","Cloud Commander supports the following command-line parameters:","For options not specified by command-line parameters, Cloud Commander then reads configuration data from ~/.cloudcmd.json. It uses port 8000 by default.","To begin using the web client, go to this URL in your browser:"]},{"l":"Updating the app","p":["If you installed Cloud Commander with npm, stop the server. Then, reinstall it with:","Then, start the server again with cloudcmd and reload the page."]},{"l":"Hot keys","p":["Key Operation"]},{"l":"Tab move via panels","p":["Esc toggle vim hotkeys (file manager, editor)"]},{"l":"Vim","p":["/","copy (selected in visual mode files)","dd","Esc","find file in current directory","G or $","gg or ^","j","k","Key","n","navigate to bottom file","navigate to next file","navigate to next found file","navigate to previous file","navigate to previous found file","navigate to top file","Operation","p","paste files","remove current file","unselect all","v","visual mode","When the --vim option is provided, or the configuration parameter vim is set, the following hotkeys become available:","y"]},{"i":"commands-can-be-joined-for-example","l":"Commands can be joined, for example"},{"l":"Drag and drop","p":["These file operations are accessible with “drag and drop”."]},{"l":"View","p":["avator"]},{"l":"Features","p":["View images.","View text files.","Play audio.","Play video."]},{"i":"hotkeys-features","l":"Hotkeys (Features)","p":["Key Operation"]},{"l":"Edit"},{"i":"hot-keys-edit","l":"Hot keys (Edit)","p":["Key Operation","For more info visit the official website"]}],[{"l":"Install Cockpit on CentOS 7"},{"l":"Installation"},{"l":"Enable cockpit"},{"l":"Open the firewall if necessary"},{"l":"Make Cockpit proxy aware","p":["To make cockpit proxy aware so that you can run it via NginX Reverse Proxy you need to do the following","For security Cockpit will be unable to serve requests from origins it is unfamiliar with due to cross domain limitations. In our example, Cockpit will see the origin as cockpit.domain.tld however it will believe it's running on 127.0.0.1 and therefore be unable to serve the request.","To make Cockpit proxy aware, you will need to modify the Cockpit config file located at /etc/cockpit/cockpit.conf. This file may not exist and if it doesn't you should create it.","These changes will let Cockpit know that connections will come through for https (secure http) and wss (secure websockets) on the subdomain cockpit.domain.tld, and that it should look for the X-Forwarded-Proto header to determine if the connection is secure or not, this is important as Cockpit will redirect any non-local connection from http to https automatically and sees cockpit.domain.tld is non-local.","Once these changes are made you will need to restart cockpit."]},{"l":"Error ERR_TOO_MANY_REDIRECTS","p":["proxy_pass http://127.0.0.1:9090; to proxy_pass https://127.0.0.1:9090;","So in your NginX Proxy Manger, set the Scheme to https"]}],[{"l":"VS Code-Server Cloud IDE Platform on CentOS 7","p":["There are two east ways to run code-server","Install Linux Script and run it as a service","Docker Compose via Portainer"]},{"l":"1. Install Linux Script and run it as a service","p":["The easiest way to install code-server is to use the install script for Linux","The install.sh does work and it is probably the simplest way of getting code server to run, but I want to try and keep everything I do and use inside the /var/www folder and sin sub-folders. So Use either method 1 or 2 to install code server","So I wil be using the NPM installed method"]},{"i":"method-1-with-npm","l":"Method 1: With NPM"},{"l":"Install some dependencies"},{"l":"Installing"},{"i":"method-2-installsh","l":"Method 2: install.sh","p":["The easiest way to install code-server is to use our install script for Linux, macOS and FreeBSD. The install script attempts to use the system package manager if possible.","You can preview what occurs during the install process:","You can modify the installation process by including one or more of the following flags:","--dry-run: echo the commands for the install process without running them.--method: choose the installation method.--method=detect: detect the package manager but fallback to --method=standalone.--method=standalone: install a standalone release archive into ~/.local.--prefix=/usr/local: install a standalone release archive system-wide.--version=X.X.X: install version X.X.X instead of latest version.--help: see usage docs. When done, the install script prints out instructions for running and starting code-server.","If you're concerned about the install script's use of curl | sh and the security implications, please see this blog post by sandstorm.io.","If you prefer to install code-server manually, despite the detection references and --dry-run feature, then continue on for information on how to do this. The install.sh script runs the exact same commands presented in the rest of this document."]},{"l":"Detection reference","p":["For Debian and Ubuntu, code-server will install the latest deb package.","For Fedora, CentOS, RHEL and openSUSE, code-server will install the latest RPM package.","For Arch Linux, code-server will install the AUR package.","For any unrecognized Linux operating system, code-server will install the latest standalone release into ~/.local.","Ensure that you add ~/.local/bin to your $PATH to run code-server. For macOS, code-server will install the Homebrew package (if you don't have Homebrew installed, code-server will install the latest standalone release into ~/.local).","Ensure that you add ~/.local/bin to your $PATH to run code-server. For FreeBSD, code-server will install the npm package with yarn or npm.","If you're installing code-server onto architecture with no releases, code-server will install the npm package with yarn or npm","The npm package builds the native modules on post-install."]},{"i":"yarn-npm","l":"yarn, npm","p":["It is recommended installing with yarn or npm when:","You aren't using a machine with amd64 or arm64. You are installing code-server on Windows You're on Linux with glibc< v2.17, glibcxx< v3.4.18 on amd64, glibc < v2.23, or glibcxx< v3.4.21 on arm64. You're running Alpine Linux or are using a non-glib c libc. See #1430 for more information. Installing code-server with yarn or npm builds native modules on install.","This process requires C dependencies; see our guide on [installing with yarn and npm]./npm.md for more information."]},{"l":"Standalone releases","p":["The only requirement to use the standalone release is glibc>= 2.17 and glibcxx>= v3.4.18 on Linux(for macOS, there is no minimum system requirement)."]},{"l":"To use a standalone release","p":["Download the latest release archive for your system from GitHub. Unpack the release.","Run code-server by executing ./bin/code-server.","You can add ./bin/code-server to your $PATH so that you can execute code-server without providing full path each time.","Here is a sample script for installing and using a standalone code-server release on Linux:"]},{"i":"debian-ubuntu","l":"Debian, Ubuntu","p":["The standalone arm64.deb does not support Ubuntu 16.04 or earlier. Please upgrade or build with yarn."]},{"i":"fedora-centos-rhel-suse","l":"Fedora, CentOS, RHEL, SUSE","p":["The standalone arm64.rpm does not support CentOS 7. Please upgrade or build with yarn."]},{"l":"Arch Linux"},{"l":"Install code-server from the AUR with plain makepkg"},{"l":"macOS"},{"l":"Docker"},{"l":"Helm","p":["You can install code-server using the Helm package manager."]},{"l":"Windows","p":["We currently do not publish Windows releases. We recommend installing code-server onto Windows with yarn or npm.","Note: You will also need to build cdr/cloud-agent manually if you would like to use code-server --link on Windows."]},{"l":"Raspberry Pi","p":["It is recommended installing code-server onto Raspberry Pi with yarn or npm."]},{"l":"Uninstall","p":["code-server can be completely uninstalled by removing the application directory, and your user configuration directory.","To delete settings and data:","If you installed with the install script, by default code-server will be in ~/.local/lib/code-server-version and you can remove it with rm -rf. e.g."]},{"l":"Homebrew Uninstall","p":["To remove the code-server homebrew package, run:"]},{"l":"Alternatively"},{"i":"yarn-npm-uninstall","l":"yarn, npm Uninstall","p":["To remove the code-server global module, run:","or"]},{"i":"debian-ubuntu-uninstall","l":"Debian, Ubuntu Uninstall","p":["To uninstall, run:"]}],[{"l":"Code-Server Via Docker Compose"},{"l":"Docker Compose","p":["Open Portainer","Click on Stacks","Click on Add Stack","Give it a name in the first field","Create a folder on your server for the config storage,you will need the full path at Volumes","Paste the following in the Docker Compose field","Scroll a bit down and click on Add an environment variable","Add the following 3 environment variables","Click on deploy Stack"]},{"l":"Application Setup","p":["The application can be accessed at:","http://devserv:4444/"]}],[{"l":"VS Code Server Extensions","p":["The following extensions are what I use at the moment, depending in different projects I would install or uninstall some of these, so I'm making two lists. The 1st list is what I always use and then I made some additional lists depending on the technology I'm using. I'm also added the font I'm using and how to add it so VS Code"]},{"l":"Preferred font","p":["Download","Fira Code, it supports font-ligatures Youtube"]},{"l":"Add to VS Code","p":["To open the settings editor: from the Code menu, choose Preferences> Settings, or use keyboard shortcut Ctrl+","To enable FiraCode in the settings editor: under Commonly Used, expand the Text Editor settings and then click on Font. In the Font Family input box type Fira Code, replacing any content. Tick the check box Enables/Disables font ligatures under Font Ligatures to enable the special ligatures."]},{"l":"Permanent list","p":[".gitignore Generator","Auto Close Tag","Auto Rename Tag","Better Comments","Colorize","CSS Peek","CSS Stacking Contexts","Dark Neon Theme","Dendron Markdown notes","Docker Extension Pack","DotENV","Explorer Exclude","GitLens","HTTP/s and Relative link checker","Markdown PDF","Markdownlint","Material Theme","Polacode","Project Manager","Remote - SSH","Remote - SSH: Editing Configuration Files","Settings Sync","SSH FS","Todo Tree","Vite","YAML"]},{"i":"when-working-with-node--npm--yarn--pnpm--xpm","l":"When working with Node / NPM / Yarn / PNPM / XPM","p":["These days you can hardly avoid using NPM or some Node Package Manager, I like to use NPM for all global Packages and Yarn for LocalPackages, this way there are no conflicts and because Yarn is faster than NPM I use Yarn for local packages because I use it more often","Npm IntelliSense"]},{"l":"PHP Projects","p":["Most companies prefer using something like Laravel for their PHP projects or they are on some legacy system or they are lucky enough to have had the time to create something even better or more specific for themselves","Laravel Blade formatter","Laravel Blade","tinker","Laravel Artisan","PHP Intelephense","PHP Namespace Resolver","PHP DocBlocker","PHP Debug & PHP Xdebug","PHP IntelliSense"]},{"l":"Perl Project","p":["Language Server and Debugger for Perl","Perl code intelligence via ctags","Perl Toolbox","Regex Previewer"]},{"l":"Python","p":["Python for VS Code","Python Extension Pack","Python Preview"]},{"i":"vue--quasar--vuex--vite","l":"Vue / Quasar / Vuex / Vite","p":["Vue Volar Extension Pack","Vetur","Vite"]},{"l":"React","p":["ES7+ React/Redux/React-Native snippets","Okay this is it for now, I will keep this list updated as I start new projects. For now I'm working on a Vue 3 / Quasar / Vite SPA with Laravel GraphQL API Using Passport for Auth and Lighthouse for GraphQL."]}],[{"l":"VS Code Server as a Service","p":["You’ll store the service configuration in a file named code-server.service, in the /usr/lib/systemd/system directory, where systemd stores its services."]},{"i":"step-1-create-the-service-start-and-enable","l":"Step 1: Create the service, start and enable","p":["The file will be empty, add the following lines","Here you first specify the description of the service. Then, you state that the nginx service must be started before this one. After the [Unit] section, you define the type of the service (simple means that the process should be simply run) and provide the command that will be executed.","You also specify that the global code-server executable should be started with a few arguments specific to code-server. --bind-addr 127.0.0.1:8080 binds it to localhost at port 8080, so it’s only directly accessible from inside of your server. --user-data-dir /var/lib/code-server sets its user data directory, and --auth password specifies that it should authenticate visitors with a password, specified in the PASSWORD environment variable declared on the line above it.","Remember to replace your_password with your desired password, then save and close the file.","The next line tells systemd to restart code-server in all malfunction events (for example, when it crashes or the process is killed). The [Install] section orders systemd to start this service when it becomes possible to log in to your server.","Start the code-server service by running the following command:","Check that it’s started correctly by observing its status:","You’ll see output similar to:","To make code-server start automatically after a server reboot, enable its service by running the following command:","In this step, you’ve downloaded code-server and made it available globally. Then, you’ve created a systemd service for it and enabled it, so code-server will start at every server boot. Next, you’ll expose it at your domain by configuring Nginx to serve as a reverse proxy between the visitor and code-server."]},{"i":"step-2--exposing-code-server-at-your-domain","l":"Step 2 — Exposing code-server at Your Domain","p":["In this section, you will configure Nginx as a reverse proxy for code-server.","As you have learned in the Nginx prerequisite step, its site configuration files are stored under /etc/nginx/conf.d and will automatically be loaded when Nginx starts.","You’ll store the configuration for exposing code-server at your domain in a file named code-server.conf, under /etc/nginx/conf.d. Start off by creating it using your editor:","Replace code-server.your-domain with your desired domain, then save and close the file.","In this file, you define that Nginx should listen to HTTP port 80. Then, you specify a server_name that tells Nginx for which domain to accept requests and apply this particular configuration.","In the next block, for the root location (/), you specify that requests should be passed back and forth to code-server running at localhost:8080. The next three lines (starting with proxy_set_header) order Nginx to carry over some HTTP request headers that are needed for correct functioning of WebSockets, which code-server extensively uses.","To test the validity of the configuration, run the following command:","You’ll see the following output:","For the configuration to take effect, you’ll need to restart Nginx:","CentOS 7 comes with SELinux turned on, with a strict ruleset, which by default does not permit Nginx to connect to local TCP sockets. Nginx needs to do in order to serve as a reverse proxy for code-server. Run the following command to relax the rule permanently:","Then, in your browser, navigate to the domain you used for code-server. You will see the code-server login prompt.","code-server is asking you for your password. Enter the one you set in the previous step and press Enter IDE. You’ll now enter code-server and immediately see its editor GUI","You now have your code-server installation accessible at your domain. In the next step, you’ll secure it by applying a free Let’s Encrypt TLS certificate."]},{"i":"step-3--securing-your-domain","l":"Step 3 — Securing Your Domain","p":["In this section, you will secure your domain using a Let’s Encrypt TLS certificate, which you’ll provision using Certbot.","To install the latest version of Certbot and its Nginx plugin, run the following command:","To request certificates for your domain, run the following command:","In this command, you run certbot to request certificates for your domain—you pass the domain name with the -d parameter. The --nginx flag tells it to automatically change Nginx site configuration to support HTTPS. Remember to replace code-server.your-domain with your domain name.","If this is your first time running Certbot, you’ll be asked to provide an email address for urgent notices and to accept the EFF’s Terms of Service. Certbot will then request certificates for your domain from Let’s Encrypt. It will then ask you if you’d like to redirect all HTTP traffic to HTTPS:","It is recommended to select the second option in order to maximize security. After you input your selection, press ENTER.","The output will be similar to this:","This means that Certbot has successfully generated TLS certificates and applied them to the Nginx configuration for your domain. You can now reload your code-server domain in your browser and observe a padlock to the left of the site address, which means that your connection is properly secured.","Now you’ll make Certbot automatically renew the certificates before they expire. To run the renewal check daily, you’ll use cron, a standard system service for running periodic jobs. You direct cron by opening and editing a file called a crontab:","This command will open the default crontab, which is currently an empty text file. Add the following line, then save and close it:","15 3 * * * will run the following command at 3:15 am every day—you can adapt this to any time.","The renew command for Certbot will check all certificates installed on the system and update any that are set to expire in less than thirty days. --quiet tells Certbot not to output information or wait for user input.","cron will now run this command daily. All installed certificates will be automatically renewed and reloaded when they have thirty days or less before they expire.","Now that you have code-server accessible at your domain through a secured Nginx reverse proxy, you’re ready to review the user interface of code-server."]}],[{"l":"Install Code Snippets","p":["Just to demonstrate, I will install this with Docker but not Via Portainer","Just run the following command via SSH","Sometimes when it is a simple Docker setup then it's easier to just do this via SSH than to do all the effort to login to Portainer","It does not matter oif you add the container here or in Portainer, you will still it in Portainer","Done!"]}],[{"l":"Installing PHP Composer on CentOS 7"},{"l":"Prerequisites","p":["A CentOS Linux system","PHP 5.3.2 or later installed","A user account with sudo privileges","Access to a command line/terminal window (Ctrl+Alt+F2)"]},{"i":"step-1-update-local-repository","l":"Step 1: Update Local Repository","p":["Before you download and install anything on your system, make sure always to update the local repository:"]},{"i":"step-2-install-software-dependencies","l":"Step 2: Install Software Dependencies","p":["Start with installing the supporting software. Type the following command in the terminal:","If you already have the required dependencies, make sure they are the latest version of the package.","install supporting software for composer for centos 7"]},{"i":"step-3-download-composer-installer-script","l":"Step 3: Download Composer Installer Script","p":["Next, you’ll need to download the installer script. The following command downloads the file in the directory you’re currently in.","download composer installer"]},{"i":"step-4-verify-integrity-of-the-download","l":"Step 4: Verify Integrity of the Download","p":["Once you have the installer script, you’ll need to verify its integrity.","To do so, you need to check whether the SHA-384 hash matches the Installer Signature (SHA-384) found on the official Composer Public Keys page.","Download the authorized signature from Composer’s Github page in the HASH variable:","Then, use the following script to compare the official hash against the one you’ve downloaded:","If the two signatures match, the output shows the message: Installer verified.","On the other hand, if the script detects some differences, it displays: Installer corrupt. To solve this issue, you’ll need to re-download the Composer Installer."]},{"i":"step-5-install-composer","l":"Step 5: Install Composer","p":["After verifying the integrity of the file you can move on to installing Composer.","You’ll want to install Composer in the /usr/local/bin directory, as a command accessible from the whole system."]},{"i":"1-to-install-composer-use-the-command","l":"1. To install composer, use the command","p":["Once the installation has been initialized, the following message will appear:"]},{"i":"2-when-the-installer-completes-the-process-check-whether-its-running-correctly","l":"2. When the installer completes the process, check whether it’s running correctly","p":["The system should display the running version, along with its syntax and available options"]},{"i":"3-finally-delete-the-installer","l":"3. Finally, delete the installer"},{"l":"Basic Composer Usage","p":["Composer helps track dependencies on a per-project basis, allowing other users to create an identical environment easily. It keeps track of the required software and allowed versions by using a composer.json file.","Additionally, it maintains consistency if someone copies the directory through the composer.lock files, which are automatically generated using the require command.","Now, let’s see how to utilize Composer when starting a new PHP project.","Open a terminal and create a project root directory for a file with the project description, its dependencies, and other additional information (the composer.json file):","Then, move it to the new directory:","The next step is loading a package. The website packagist.org has a broad range of different PHP packages to choose from.","In this example, we’ll download and use the monolog/monolog package for our project. The information after the slash is the package name, while the name before the slash is the vendor.","Along with downloading the software, your system will automatically create the composer.json file and the composer.lock file with the command:","composer require monolog/monolog","Now, check to see whether all the files were created by listing the content of the directory:","Among the content, you should see the composer.json and composer.lock files, as well as a vendor directory.","Next, open the composer.json file:","You should see that the newly added monolog software has a carat (^) sign beside the version number, indicating the minimum version of the software."]},{"l":"How to Set Up Autoloading","p":["You can simplify working with dependencies by configuring Composer to autoload classes for you (since PHP doesn’t do this automatically).","With the text editor of your preference, create a new file (in this example, it will be under the name composer_sample):","Add the following into the file:","configure composer to autoload","Save and exit.","With this, you can use the following command to autoload monolog:"]},{"l":"Update Dependencies","p":["If you need to update all the dependencies in your composer.json file you can do so with:","This command updates dependencies according to the version specified in the file.","You can also update one (or more) dependencies individually:"]}],[{"l":"Installing LazyDocker"},{"l":"What is LazyDocker","p":["Memorising docker commands is hard. Memorising aliases is slightly less hard. Keeping track of your containers across multiple terminal windows is near impossible. What if you had all the information you needed in one terminal window with every common command living one keypress away (and the ability to add custom commands as well). Lazydocker's goal is to make that dream a reality","For more info on LazyDocker visit the GitHub Repo"]},{"l":"Install LazyDocker","p":["I found installing Lazy Docker via GO was the quickest way and I'm hesitant to let something that is reporting on Docker be run on top of Docker for obvious reasons to.","If you haven't installed GoLang yet then got to Installing Golang first and come back.","After you installed GoLang then run the following command to install LazyDocker","Then to run LazyDocker run the following command:","Done!"]}],[{"l":"Install CouchDB"},{"l":"Docker Install","p":["This was is quick install in Portainer with Docker Compose","Open portainer","Click on Stacks","Click on Add Stack","Give it a name","Add the following in Docker Compose Field","Add 3 Environment variables","Click on Deploy Stack","Now you should be able to access your instance of CouchDB by going to http://CRONje.ME:4449/_utils"]},{"l":"Yum Install"},{"i":"step-1---install-epel-repository","l":"Step 1 - Install EPEL repository","p":["Before installing Apache CouchDB on a CentOS 7 server, we need to add a new EPEL repository (Extra Package for Enterprise Linux).","Add EPEL repository using the following yum command.","EPEL repository has been installed.","1"]},{"i":"step-2---install-apache-couchdb","l":"Step 2 - Install Apache CouchDB","p":["Apache CouchDB provides rpm packages for installation on Redhat Linux. So in this step, we will install CouchDB from the Apache repository.","Go to the /etc/yum.repos.d directory and create a new repo file apache-couchdb.repo using the vim editor.","Paste the following lines.","That's it. Save the change, and exit the editor.","Now install Apache CouchDB using the following command.","After the installation is complete, start the service and enable it to launch at system boot.","Now check the service.","And you should get a result similar to the one shown below.","2","Now check the server port.","3","Apache CouchDB has been successfully installed on the CentOS 7 server, and is running under default port 5984."]},{"i":"step-3---enable-apache-couchdb-http-server","l":"Step 3 - Enable Apache CouchDB HTTP server","p":["Apache CouchDB provides the HTTP server for admin access on default port 5984. And has an admin panel Web UI named ' Fauxton'.","In this step, we will enable the CouchDB HTTP server for admin panel access. So to begin with, go to the apache couchdb installation directory /opt/couchdb, and edit the 'default.ini' configuration file under etc/ directory.","Now go to the '[chttpd]' configuration line and change the bind_address value with your IP address.","Save and exit.","Restart the couchdb service using the following systemctl command.","Next, open your web browser and type your server IP address as shown below.","4","And you should get the following Fauxton web UI page.","Note: If you have firewalld running on your server, open the couchdb port 5984 using the firewall-cmd command, as shown below.","5"]},{"i":"step-4---configure-admin-account-couchdb","l":"Step 4 - Configure admin account CouchDB","p":["By default, the fresh Apache CouchDB installation has an 'Admin Party'. So anyone who connects to CouchDB server can do anything, including create, delete, add new user etc. In this step, we want to add new admin account for the CouchDB, and we will create that admin account from the admin panel.","Open your web browser and visit the following server IP address on port 5984.","http://104.192.7.185:5984/_utils/","Now click on the Admin Party tab, type the admin user and password for couchdb, and then click the 'Create Admin' button.","6","New admin user for couchdb has been created.","Now, if you want to login to the admin panel Fauxton again, you will have to enter the login details.","7","Type your admin user and password to get access to the admin panel."]},{"i":"step-5---basic-usage-apache-couchdb","l":"Step 5 - Basic usage Apache CouchDB","p":["10","8","And the output should contains information related to the database.","And you should get the 'hakase_db' as part of the retrieved list.","And you will get the Unauthorized message error.","And you will see the command is successful.","Apache CouchDB provides an API for managing the CouchDB system. And we will be using the 'curl' command utility for managing the CouchDB system.","Create new database","Hello CouchDB","In order to create a new database, we need admin privileges. And for this action, we will be using the PUT parameter.","In this step, we will discuss basic management. We will try to create the new database, show database list, delete the database etc using curl command.","List database and Info","New database 'hakase_db' has been created through the CouchDB API.","Next, get 'hakase_db' info using the command below.","Now try using the admin user password.","Run the command below to get the database list on the server.","Run the following curl command without user and password.","The output reveals CouchDB 2.1.0 installed on our CentOS 7 server.","To get information about the database, we must use the 'GET' parameter.","To get information about the installed couchdb server, we can use the 'GET' parameter as shown below.","We will create a new database named hakase_db.","You will get a Welcome message result similar to the following."]},{"l":"Delete Database","p":["We need the 'DELETE' parameter for deleting the database on the CouchDB server. Delete the 'hakase_db' database using the following command.","Now check again the database list on the CouchDB server.","And you'll find that the 'hakase_db' database is deleted.","10","The installation and configuration for Apache CouchDB on CentOS 7 has been successful."]}],[{"l":"Install Dash Machine","p":["Dash Machine is another app dashboard, it looks to have a few features, but we'll see afthe install","This is my own docker compose file, they project does not have an offical compose file"]},{"l":"Via Portainer","p":["I'm using portainer to create my stacks from thes Docker Compose Yaml files","Open Portaier","Click on Stacks","New Stack","Give it name","Paste the folling in the Docker Composer field"]},{"l":"Docker Composer Script"},{"l":"Default User","p":["User: admin Password: admin","Click on add Stack","Done!"]}],[{"l":"Install Dillinger","p":["dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor."]},{"l":"Docker Compose","p":["Open Portainer","Click on Stacks","Click on Add Stack","Give it a name in the first field","Create a folder on your server for the config storage,you will need the full path at Volumes","Paste the following in the Docker Compose field","Scroll a bit down and click on Add an environment variable","Add the following 3 environment variables","Click on deploy Stack"]}],[{"i":"install-dnf-in-rhelcentos-7","l":"Install DNF in RHEL/CentOS 7","p":["DNF stands for Dandified yum. DNF is a software package manager for RPM-based Linux distributions such as Fedora, RHEL and CentOS. It is the next upcoming major version of Yum. DNF is first introduced in Fedora and has replaced to become the default package manager of the Fedora distributions. DNF is same as Yum that installs, updates and removes packages on RPM bas4ed Linux systems. DNF is introduced for improving the bottlenecks of Yum such as performance, Memory usages, Dependency resolution, speed, and some other factors. The latest stable release of DNF is 1.0 and it is written in Python.","To install DNF on RHEL/CentOS 7 systems, you need to set up and enable epel YUM REPO before installing DNF."]},{"l":"Install EPEL"},{"l":"Install DNF"},{"l":"Using DNF","p":["You can now start to run commands using DNF. To view the man page you can use the following command:"]},{"l":"DNF vs YUM command Examples","p":["Install a Package","Eg: yum install httpd"]},{"l":"Upgrade a package"},{"l":"Remove a package","p":["Eg: yum remove httpd"]},{"l":"Advantages of DNF","p":["DNF comes with a simplified code: DNF has about 29000 lines of code compared to over 59000 in yum.","Support for multiple repositories.","Faster and lesser memory intensive operations compared to yum.","Simple interface.","DNF runs in both Python 2 and Python 3.","Simple configuration.","DNF has faster dependency resolving speed than yum.","RPM consistent behavior.","C bindings for lower level libraries.","Package group support, including multiple-repository groups.","The default location of DNF configuration file is /etc/dnf/dnf.conf."]},{"l":"Available DNF commands","p":["autoremove","check-update","clean","distro-sync","downgrade","group","help","history","info","install","list","makecache","mark","provides","reinstall","remove","repolist","repository-packages","search","updateinfo","upgrade","upgrade-to"]}],[{"l":"Double Commander Install","p":["Double Commander is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas."]},{"l":"Docker Compose","p":["Open Portainer","Click on Stacks","Click on Add Stack","Give it a name in the first field","Create a folder on your server for the config storage,you will need the full path at Volumes","Paste the following in the Docker Compose field","Scroll a bit down and click on Add an environment variable","Add the following 3 environment variables","Click on deploy Stack"]},{"l":"Application Setup","p":["The application can be accessed at:","http://yourhost:3000/ By default the user/pass is abc/abc, if you change your password or want to login manually to the GUI session for any reason use the following link:","http://yourhost:3000/?login=true"]}],[{"l":"Droppy","p":["droppy is a self-hosted file storage server with a web interface and capabilities to edit files and view media directly in the browser. It is particularly well-suited to be run on low-end hardware like the Raspberry Pi."]},{"l":"Features","p":["Responsive, scalable HTML5 interface","Realtime updates of file system changes","Directory and Multi-File upload","Drag-and-Drop support","Clipboard support to create image/text files","Side-by-Side mode","Simple and fast Search","Shareable public download links","Zip download of directories","Powerful text editor with themes and broad language support","Image and video gallery with touch support","Audio player with seeking support","Fullscreen support for editor and gallery","Supports installing to the homescreen","Docker images available for x86-64, ARMv6, ARMv7 and ARMv8"]},{"l":"General Information","p":["Two directories will be used, one for configuration and one for the actual files:","droppy maintains an in-memory representation of the files directory. If you're on slow storage and/or serving 100k or more files, the initial indexing on startup will likely take some time."]},{"l":"Installation"},{"i":"local-installation","l":"Local Installation \uD83D\uDCE6","p":["With Node.js >= 12.10.0 installed, run:","To make droppy run in the background, you can use the --daemon option, thought it is adviced that you install it as a persistent service in your system. For Linux, see these guides:","Systemd-based distributions","Debian (Pre-Jessie)","Nginx reverse proxy","Apache reverse proxy"]},{"i":"docker-installation","l":"Docker installation \uD83D\uDC33","p":["The silverwind/droppy multi-arch images supports amd64, arm64, arm/v7 and arm/v6 architectures. To pull and run, use:","This method uses automatic volumes for /config and /files which can be overridden through -v /srv/droppy/config:/config and -v /srv/droppy/files:/files. If you're using existing files, it's advisable to use -e UID=1000-e GID=1000 to get new files written with correct ownership."]},{"i":"to-update-a-docker-installation-run","l":"To update a docker installation, run"},{"l":"docker-compose","p":["Alternatively, you can use the example docker-compose.yml:","This example docker-compose.yml uses the subdirectories config and files of the current working directory for storing data."]},{"l":"Caddy","p":["See the example Caddyfile."]},{"l":"Configuration","p":["By default, the server listens on all IPv4 and IPv6 interfaces on port 8989. On first startup, a prompt to create login data for the first account will appear. Once it's created, login credentials are enforced. Additional accounts can be created in the options interface or the command line. Configuration is done in config/config.json, which is created with these defaults:"]},{"l":"Options","p":["allowFrame boolean- Allow the page to be loaded into a frame or iframe. Default: false.","dev boolean- Enable developer mode, skipping resource minification and enabling live reload. Default: false.","headers Object: A object with key-value pairs of custom HTTP headers to set on all responses, for example {\"Access-Control-Allow-Origin\": \"*\"}. Default: .","ignorePatterns Array- Array of file path glob patterns to ignore when indexing files. See here for supported patterns. Default: [].","keepAlive number- Interval in milliseconds in which the server sends websocket keepalive messages, which may be necessary when proxies are involved. 0 disables keepalive messages. - Default: 20000.","linkExtensions boolean- Whether shared links should include the file extension. This can be used to allow other software to make a guess on the content of the file without actually - retrieving it. Default: false.","linkLength number- The amount of characters in a shared link. Default: 5.","listeners Array- Defines on which network interfaces, port and protocols the server will listen. See listener options below. listeners has no effect when droppy is used as a module. - The default listens on HTTP port 8989 on all interfaces and protocols.","logLevel number- Logging amount. 0 is no logging, 1 is errors, 2 is info (HTTP requests), 3 is debug (Websocket communication). Default: 2.","maxFileSize number- The maximum file size in bytes a user can upload in a single file. 0 means no limit. Default: 0.","pollingInterval number- Interval in milliseconds in which the file system is polled for changes, which may necessary for files on external or network-mapped drives. Corresponds to - chokidar's usePolling option. This is CPU-intensive. 0 disables polling. Default: 0.","public boolean- When enabled, no user authentication is performed. Default: false.","readOnly boolean- Treat all files as being read-only. Default: false.","timestamps boolean- When enabled, adds timestamps to log output. Default: true.","updateInterval number- Interval in milliseconds in which a single client can receive update messages through changes in the file system. Default: 1000.","uploadTimeout number- Request timeout for upload requests in milliseconds. Default: 604800000 which is 7 days.","watch boolean- Whether to watch the local file system for changes. Disabling this may improve performance when dealing with a large number of files, but with the downside that - changes not done via droppy won't be detected. Default: true."]},{"l":"Listener Options","p":["listeners defines on which network interfaces, ports and protocol(s) the server will listen. For example:","The above configuration will result in:","HTTP listening on all IPv4 and IPv6 interfaces, port 80 and on the unix domain socket /tmp/droppy.","HTTPS listening on all IPv4 interfaces, port 443 using the provided TLS files.","A listener object accepts these options:","host string/Array - Network interface(s) addresses to listen on. Required when port is given. Note that \"::\" will typically bind to both IPv4 and IPv6 on all addresses but a \"0.0.0.0\" address might be required if IPv6 is disabled.","port number/string/Array - Network port(s) to listen on. Required when host is given.","socket string/Array - Unix domain socket(s) to listen on.","protocol string - Protocol to use, http or https. Required.","For TLS the following additional options are available. Paths can be given relative to the configuration directory and ~ is resolved as expected.","cert string- Path to PEM-encoded TLS certificate file, which can include additional intermediate certificates concatenated after the main certificate. Required.","key string- Path to PEM-encoded TLS private key file not encrypted with a passphrase. Required."]},{"l":"Downloading from the command line","p":["To download shared links with curl and wget to the correct filename:"]},{"l":"Development","p":["To start a live-reloading dev server:","The Makefile has a few tasks for updating dependencies, pushing docker images, see the comment above for dependencies of those tasks"]}],[{"l":"Install dutree","p":["dutree – A CLI Tool to Analyze Disk Usage in Coloured Output","dutree is a free open-source, fast command-line tool for analyzing disk usage, written in Rust programming language. It is developed from durep (disk usage reporter) and tree (list directory content in tree-like format) command line tools. dutree therefore reports disk usage in a tree-like format.","It displays coloured output, depending on values configured in the GNU LS_COLORS environment variable. This env variable enables for setting the colours of files based on extension, permissions as well as file type."]},{"i":"dutree-features","l":"dutree Features:","p":["Show the file system tree.","Supports aggregating of small files.","Allows for comparing different directories.","Supports excluding of files or directories."]},{"l":"How to Install dutree in Linux Systems","p":["To install dutree in Linux distributions, you must have rust programming language installed on your system as shown.","Once rust installed, you can run the following command to install strong>dutree in Linux distributions as shown.","After installing dutree, it uses environment colors according to the variable LS_COLORS, it has the same colors ls --color command that our distro has configured.","The simplest way of running dutree is without arguments, this way it shows a filesystem tree.","img","To display real disk usage instead of file size, use the -u flag.","img1"]},{"l":"Show Directories in Depth","p":["You can show directories up to a given depth(default 1), using the -d flag. The command below will show directories up to a depth of 3, under the current working directory.","For example if the current working directory (~/), then display size of ~/*/*/* as shown in the following sample screenshot.","img3"]},{"l":"Exclude Files or Directories in Output","p":["To exclude matching a file or directory name, use the -x flag.","img4","You can also get a quick local overview by skipping directories, using the -f option, like so.","img5","A full summary/overview can be generated using the -s flag as shown.","img6"]},{"l":"ggregate Small Files","p":["It is possible to aggregate files smaller than a certain size, default is 1M as shown.","img7"]},{"l":"Exclude Hidden Files","p":["The -H switch allows for excluding hidden files in the output.","The -b option is used to print sizes in bytes, instead of kilobytes (default).","To turn off colors, and only display ASCII characters, use the -A flag like so.","You can view the dutree help message using the -h option.","dutree Github Repository: https://github.com/nachoparker/dutree","dutree is a simple yet powerful command-line tool to show file size and analyze disk usage in tree-like format, on Linux systems. Use the comment form below to share your thoughts or queries about it, with us."]}],[{"l":"Install Fail2ban on CentOS 7","p":["While Fail2ban is not available in the official CentOS package repository, it is packaged for the EPEL project. EPEL, standing for Extra Packages for Enterprise Linux, can be installed with a release package that is available from CentOS:","You will be prompted to continue—press y, followed by Enter:","Now we should be able to install the fail2ban package:","Again, press y and Enter when prompted to continue.","Once the installation has finished, use systemctl to enable the fail2ban service:"]},{"l":"Configure Local Settings","p":["The Fail2ban service keeps its configuration files in the /etc/fail2ban directory. There, you can find a file with default values called jail.conf. Since this file may be overwritten by package upgrades, we shouldn’t edit it in-place. Instead, we’ll write a new file called jail.local. Any values defined in jail.local will override those in jail.conf.","jail.conf contains a [DEFAULT] section, followed by sections for individual services. jail.local may override any of these values. Additionally, files in /etc/fail2ban/jail.d/ can be used to override settings in both of these files. Files are applied in the following order:","Any file may contain a [DEFAULT] section, executed first, and may also contain sections for individual jails. The last value set for a given parameter takes precedence.","Let’s begin by writing a very simple version of jail.local. Open a new file using nano (or your editor of choice):","This overrides three settings: It sets a new default bantime for all services, makes sure we’re using iptables for firewall configuration, and enables the sshd jail.","Exit and save the new file (in nano, press Ctrl-X to exit, y to save, and Enter to confirm the filename). Now we can restart the fail2ban service using systemctl:","The systemctl command should finish without any output. In order to check that the service is running, we can use fail2ban-client:","You can also get more detailed information about a specific jail:"]},{"l":"Explore Available Settings","p":["The version of jail.local we defined above is a good start, but you may want to adjust a number of other settings. Open jail.conf, and we’ll examine some of the defaults. If you decide to change any of these values, remember that they should be copied to the appropriate section of jail.local and adjusted there, rather than modified in-place.","Default Settings for All Jails First, scroll through the [DEFAULT] section.","You can adjust the source addresses that Fail2ban ignores by adding a value to the ignoreip parameter. Currently, it is configured not to ban any traffic coming from the local machine. You can include additional addresses to ignore by appending them to the end of the parameter, separated by a space.","The bantime parameter sets the length of time that a client will be banned when they have failed to authenticate correctly. This is measured in seconds. By default, this is set to 600 seconds, or 10 minutes.","The next two parameters that you want to pay attention to are findtime and maxretry. These work together to establish the conditions under which a client should be banned.","The maxretry variable sets the number of tries a client has to authenticate within a window of time defined by findtime, before being banned. With the default settings, Fail2ban will ban a client that unsuccessfully attempts to log in 3 times within a 10 minute window.","If you wish to configure email alerts, you may need to override the destemail, sendername, and mta settings. The destemail parameter sets the email address that should receive ban messages. The sendername sets the value of the “From” field in the email. The mta parameter configures what mail service will be used to send mail.","This parameter configures the action that Fail2ban takes when it wants to institute a ban. The value action_ is defined in the file shortly before this parameter. The default action is to simply configure the firewall to reject traffic from the offending host until the ban time elapses.","If you would like to configure email alerts, you can override this value from action to action_mw. If you want the email to include the relevant log lines, you can change it to action_mwl. You’ll want to make sure you have the appropriate mail settings configured if you choose to use mail alerts."]},{"l":"Settings for Individual Jails","p":["After [DEFAULT], we’ll encounter sections configuring individual jails for different services. These will typically include a port to be banned and a logpath to monitor for malicious access attempts. For example, the SSH jail we already enabled in jail.local has the following settings:","In this case, ssh is a pre-defined variable for the standard SSH port, and %(sshd_log)s uses a value defined elsewhere in Fail2ban’s standard configuration (this helps keep jail.conf portable between different operating systems).","Another setting you may encounter is the filter that will be used to decide whether a line in a log indicates a failed authentication.","The filter value is actually a reference to a file located in the /etc/fail2ban/filter.d directory, with its .conf extension removed. This file contains the regular expressions that determine whether a line in the log is bad. We won’t be covering this file in-depth in this guide, because it is fairly complex and the predefined settings match appropriate lines well.","However, you can see what kind of filters are available by looking into that directory:","If you see a file that looks to be related to a service you are using, you should open it with a text editor. Most of the files are fairly well commented and you should be able to tell what type of condition the script was designed to guard against. Most of these filters have appropriate (disabled) sections in jail.conf that we can enable in jail.local if desired.","For instance, pretend that we are serving a website using Nginx and realize that a password-protected portion of our site is getting slammed with login attempts. We can tell Fail2ban to use the nginx-http-auth.conf file to check for this condition within the /var/log/nginx/error.log file.","This is actually already set up in a section called [nginx-http-auth] in our /etc/fail2ban/jail.conf file. We would just need to add an enabled parameter for the nginx-http-auth jail to jail.local:","And restart the fail2ban service:","Monitor Fail2ban Logs and Firewall Configuration It’s important to know that a service like Fail2ban is working as-intended. Start by using systemctl to check the status of the service:","If something seems amiss here, you can troubleshoot by checking logs for the fail2ban unit since the last boot:","Next, use fail2ban-client to query the overall status of fail2ban-server, or any individual jail:","Follow Fail2ban’s log for a record of recent actions (press Ctrl-C to exit):","List the current rules configured for iptables:","Show iptables rules in a format that reflects the commands necessary to enable each rule:"]}],[{"l":"Installing Firefox","p":["In the past I struggled to get this to work, I'm going to try again.","Try installing","If the repo is down try installing this way","Create a symlink to a newly downloaded /srv/tools/firefox/firefox executable.","Start the latest Firefox browser from GUI menu or by executing the firefox command.","If you get an error like this:","Then you need to install GTK3","Getting this error?","That means everything is working, now you just need to specify your local display for displaying the browser, for that you need to have X11 forwarding and an XServer. But no big deal, just two quick steps here","X11 Forwarding"]}],[{"l":"Install Flame Dashboard"},{"l":"Install via Portainer","p":["Open Portainer","Click on Stacks","Add Stack","Give the stack a name","Paste the following under Docker Compose","Click on Deploy","Done, now you can go to yourserver.com:4446"]}],[{"l":"Git Commit Messages","p":["_ Material Design","_ Updated Material","Add closing line, Cloud9 IDE and couchDB","Added Docker Networks","Added Node Version manager, Golang, Vault, cloud9,bash, OhMyBash","Added some links to Whiptail docs","Added some more troubleshooting to portainer upgrade","Added Some Security Setup Docs","Added Symbolic Links","Added Vhost, NW.JS","Added Virtual Hosts to Setup index","Added X11 Forwarding Tips","charlpcronje committed 4 days ago","charlpcronje committed 4 minutes ago","charlpcronje committed 5 minutes ago","charlpcronje committed 6 hours ago","charlpcronje committed yesterday","Commits on Jan 20, 2022","Commits on Jan 23, 2022","Commits Today","File Moved","Image for couch db tips","Index update","Install NginX","Last 50 Commits to Github","Linux Tips, RPM Packages and Vault install and usages","Make Cockpit proxy aware","Moved Some Files","Moved these files","Removed typo","Service Menu","SSL and Reverse Proxy Setup","SSL Certificates","Sub Domain List and Users Update","Update Indexes","Updated docs for code server","Updated firewall Settings and Users","Updated Index","Updated SSL Certificates and Vault","Updated Tip Index","Updated User List","Updated Vault","vhosts tips"]}],[{"l":"Install Golang on CentOS 7"},{"l":"Prerequisites","p":["The user used(Linux user)In this tutorial is root or a user with root power i.e add sudo at the starting of every command."]},{"l":"Installing Golang Installer","p":["Follow the below steps to install the Go programming language on Centos 7:","Step 1: This is yet another method to get Golang installed on your CentOS 7 / RHEL 7 system. It involves downloading the official Golang Installers for Linux systems as below.","Step 2: With the installer downloaded, make it executable.","Step 3: Now run the installer to install the latest Golang version.","The installation will proceed as below:","You will then be required to source the ~/.bash_profile","Finally, verify the installed version of Golang.","Step 4: To verify that go is properly installed run this command:"]}],[{"l":"Heimdal Dashboard","p":["Add Container","Add the env variables","Add Volumes","Click on Deploy container","Click on Publish a new network port","Container Port: 80","Go and create that folder","Go to http://yourserver:4440","Host Port: 4440","I'm running this dashboard in a container","Name: linuxserver/heimdal","Open Portainer","PGID: 1000","PUID: 1000","Set the folder on your server where you want the container to store it's data","TZ: Africa/Johannesburg"]}],[{"l":"Set Server Hostname","p":["A hostname is simply the name a server goes by on a network. Setting a unique hostname is an excellent way to quickly find and identify different servers on your network."]},{"l":"There are three 3 types of host names","p":["The static hostname is the most important one, and it’s stored in the /etc/hostname file. This hostname is used among machines to identify a particular server.","The pretty hostname got its name because it allows for more characters and punctuation. It’s more user-friendly, but since it uses non-standard characters, it is not permitted for machine code. The pretty hostname is stored in the /etc/machine-info directory.","The transient hostname is one maintained in the Linux kernel. It is dynamic, meaning it will be lost after a reboot. This approach might be useful if you have a minor job requiring a temporary hostname, but you don’t want to risk making a permanent change that might be confusing. how to set or change hostname in centos guide"]},{"l":"Prerequisites","p":["Server running CentOS 7","Access to a user account with root privileges","Terminal window (Menu > Applications > Utilities > Terminal)","A text editor, like Vim"]},{"l":"How to Change Centos Hostname"},{"i":"step-1-check-existing-hostname","l":"Step 1: Check Existing Hostname","p":["Before you start, it is advised to check what your current hostname is. Type the following command in the console to find out:","The output should return the static hostname, as well as a list of other information about your network configuration and operating system.","check static hostname on centos","hostname"]},{"i":"step-2-set-a-new-static-hostname","l":"Step 2: Set a New Static Hostname","p":["As CentOS 7 only allows Fully Qualified Domain Names ( FQDNs), double-check the hostname you plan to use."]},{"l":"Acceptable values include","p":["Lower-case letters a to z","Numbers 0 to 9","Periods and hyphens","Hostnames must be between 2 and 63 characters","Hostnames must start and end with a number or letter","Type in the following command in the terminal:","Note: Make sure to replace my.new-hostname.server with your chosen hostname."]},{"i":"step-3-check-the-hostname","l":"Step 3: Check the Hostname","p":["Next, verify the hostname by using the following command again:","The console should display the new hostname."]},{"i":"step-4-edit-the-etchosts-file","l":"Step 4: Edit the /etc/hosts File","p":["Start by opening the hosts file by typing:","In the text editor, look for the line that begins with 127.0.0.1(the IP address that refers to the system you are working on). It should read:","Change the entry old.hostname to my.new-hostname.server – and spell it the same as in Step 2.","Save the file and exit.","Note: To learn more about hosts file, check out our article on how to edit hosts file on Linux, Windows and Mac."]},{"i":"step-5-reboot-and-check-centos-7-machine-hostname","l":"Step 5: Reboot and Check CentOS 7 machine hostname","p":["Restart your system. Open a console window, and run:","It should display your new hostname.","You can also use your text editor to open and verify your /etc/hostsfile. It should still have your new hostname listed."]},{"i":"step-6-optional-using-a-pretty-hostname","l":"Step 6 (Optional): Using a Pretty Hostname","p":["To use a \"pretty\" hostname type the following command:","Make sure you have the quotation marks.","Once that completes, check the hostname:","The console should return a list of information. Check the Static hostname and Pretty hostname lines – they should look like this:","Static hostname: mybossshostname","Pretty hostname: My Boss's Hostname","By putting the hostname in quotes, you’re telling the system to use the complex characters inside the quotes as a pretty hostname.","This enables you to avoid character restrictions for static hostnames.","using a pretty name on centos But you still need a FQDN hostname for the machine to understand. Fortunately, CentOS is smart enough to remove or change any unacceptable characters and render the static hostname automatically."]},{"i":"step-7-optional-setting-a-transient-hostname","l":"Step 7 (Optional): Setting a Transient Hostname","p":["Fist, open the console and type the following:","You can check the hostname in the same way you did earlier, with the hostnamectl or hostnamectl status command.","This change will last until you reboot the machine.","You can use this command with any type of hostname ( Static, Pretty, or Transient) as an option with the double-hyphen.","Just use the double-hyphen to indicate what you want:","or"]}],[{"l":"Install CWP Control Panel","p":["DO NOT INSTALL","Okay so this did sound like a good idea, but it is a very bad one. Once you have installed CWP you lose manual control of a lot of systems and you can not uninstall the damn thing, it is a piece of shit. The only way to remove this piece of crap is to reinstall your entire OS... Damn Why don't they warm you before you start"]},{"l":"Quick Into","p":["This control panel is a lot like CPanel, you can manage the following within the panel","Web","Email","Users","Domains","Firewall","Database","I've now been trying for a while to run two version of php at the same time, but all the tutorial fall over at some stage. so I decided to rather get a tool that has this functionally built in to have specific PHP versions for each vHost"]},{"l":"Install CWP"}],[{"l":"Install JAVA","p":["Install the Java Development Kit with the following command:","Install OpenJRE 11","Java Runtime Environment 11 (Open JRE 11) is a subset of OpenJDK. Therefore, both packages are included in the command:","The official Oracle JDK is not available for download from the local repository. You have to download the .rpm package from the Java SE Downloads page.","After the download is complete, you can install the package with the command:"]},{"l":"Verify Java is Installed on Your System","p":["The following command shows which Java release you have and confirms installation was successful:"]},{"l":"Install Specific Version of Java","p":["You can also install any of the other versions of Java by changing the version number in the command."]},{"l":"Install JDK 8","p":["You may decide to use Open JDK 8, instead of the default OpenJDK 11.","To do so, type in the following command in the terminal:"]},{"l":"Install JRE 8","p":["As a subset of Open JDK 8, you can install Open JRE 8 by typing in the command:"]},{"l":"Install Oracle Java 12","p":["As previously mentioned, you have to download Oracle Java from its official page.","To install the newest version, simply download the appropriate package from their webpage and continue with the installation."]},{"l":"How to Set Default Java Version","p":["Since you can have multiple versions of Java installed on your system, you can decide which one is the default one. To do so;","Run a command that shows all the installed versions on your computer:","img","The image above shows that there are two alternatives to this system. These choices are represented by numbers 1(Java 11) and 2(Java 8).","To change the default version, type the associated number (in this case, 1 or 2) and press Enter."]},{"l":"How to Set JAVA_HOME Environment Variable","p":["First, locate where Java is installed:","img2","In the output, you can find the path for each Java package installed on the system.","/usr/lib/jvm/java-11-openjdk-11.0.3.7-0.el7_6.x86_64/bin/java(where OpenJDK 11 is located)","/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre/bin/java(where OpenJDK 8 is located)","Once you see all the paths, copy the one of your preferred Java version.","Then, open the .bash_profile with any text editor. In this example, we use vim:","At the bottom of the file, add a line which specifies the location of JAVA_HOME and JAVA_JRE in the following manner:","You will get the following output.","For example, if we copy the installation path for Java 11 in the previous step, the added line in the text editor will be:","Now source the file using the following command.","Now you can run the echo $JAVA_HOME and echo $JAVA_JRE command again to check if the environment variable is set or not."]}]]